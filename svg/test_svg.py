#!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import division
from other.core import *
import sys

# http://www.w3.org/TR/SVG/images/paths/cubic02.svg
cubic02 = ('''\
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg width="10cm" height="10cm" viewBox="0 0 1000 1000"
     xmlns="http://www.w3.org/2000/svg" version="1.1">
  <title>Example cubic02 - cubic BÃ©zier commands in path data</title>
  <desc>Picture showing examples of "C" and "S" commands,
        along with annotations showing the control points
        and end points</desc>
  <style type="text/css"><![CDATA[
    .Border { fill:none; stroke:blue; stroke-width:1 }
    .Connect { fill:none; stroke:#888888; stroke-width:2 }
    .SamplePath { fill:none; stroke:red; stroke-width:5 }
    .EndPoint { fill:none; stroke:#888888; stroke-width:2 }
    .CtlPoint { fill:#888888; stroke:none }
    .AutoCtlPoint { fill:none; stroke:blue; stroke-width:4 }
    .Label { text-anchor:middle; font-size:22; font-family:Verdana }
  ]]></style>

  <rect class="Border" x="1" y="1" width="998" height="998" />

  <!-- Path 1 -->
  <polyline class="Connect" points="100,200 100,100" />
  <polyline class="Connect" points="400,100 400,200" />
  <path class="SamplePath" d="M100,200 C100,100 400,100 400,200" />
  <circle class="EndPoint" cx="100" cy="200" r="10" />
  <circle class="EndPoint" cx="400" cy="200" r="10" />
  <circle class="CtlPoint" cx="100" cy="100" r="10" />
  <circle class="CtlPoint" cx="400" cy="100" r="10" />
  <text class="Label" x="250" y="275">M100,200 C100,100 400,100 400,200</text>

  <!-- Path 2 -->
  <polyline class="Connect" points="100,500 25,400" />
  <polyline class="Connect" points="475,400 400,500" />
  <path class="SamplePath" d="M100,500 C25,400 475,400 400,500" />
  <circle class="EndPoint" cx="100" cy="500" r="10" />
  <circle class="EndPoint" cx="400" cy="500" r="10" />
  <circle class="CtlPoint" cx="25" cy="400" r="10" />
  <circle class="CtlPoint" cx="475" cy="400" r="10" />
  <text class="Label" x="250" y="575">M100,500 C25,400 475,400 400,500</text>

  <!-- Path 3 -->
  <polyline class="Connect" points="100,800 175,700" />
  <polyline class="Connect" points="325,700 400,800" />
  <path class="SamplePath" d="M100,800 C175,700 325,700 400,800" />
  <circle class="EndPoint" cx="100" cy="800" r="10" />
  <circle class="EndPoint" cx="400" cy="800" r="10" />
  <circle class="CtlPoint" cx="175" cy="700" r="10" />
  <circle class="CtlPoint" cx="325" cy="700" r="10" />
  <text class="Label" x="250" y="875">M100,800 C175,700 325,700 400,800</text>

  <!-- Path 4 -->
  <polyline class="Connect" points="600,200 675,100" />
  <polyline class="Connect" points="975,100 900,200" />
  <path class="SamplePath" d="M600,200 C675,100 975,100 900,200" />
  <circle class="EndPoint" cx="600" cy="200" r="10" />
  <circle class="EndPoint" cx="900" cy="200" r="10" />
  <circle class="CtlPoint" cx="675" cy="100" r="10" />
  <circle class="CtlPoint" cx="975" cy="100" r="10" />
  <text class="Label" x="750" y="275">M600,200 C675,100 975,100 900,200</text>

  <!-- Path 5 -->
  <polyline class="Connect" points="600,500 600,350" />
  <polyline class="Connect" points="900,650 900,500" />
  <path class="SamplePath" d="M600,500 C600,350 900,650 900,500" />
  <circle class="EndPoint" cx="600" cy="500" r="10" />
  <circle class="EndPoint" cx="900" cy="500" r="10" />
  <circle class="CtlPoint" cx="600" cy="350" r="10" />
  <circle class="CtlPoint" cx="900" cy="650" r="10" />
  <text class="Label" x="750" y="575">M600,500 C600,350 900,650 900,500</text>

  <!-- Path 6 (C and S command) -->
  <polyline class="Connect" points="600,800 625,700" />
  <polyline class="Connect" points="725,700 750,800" />
  <polyline class="Connect" points="750,800 775,900" />
  <polyline class="Connect" points="875,900 900,800" />
  <path class="SamplePath" d="M600,800 C625,700 725,700 750,800
                                       S875,900 900,800" />
  <circle class="EndPoint" cx="600" cy="800" r="10" />
  <circle class="EndPoint" cx="750" cy="800" r="10" />
  <circle class="EndPoint" cx="900" cy="800" r="10" />
  <circle class="CtlPoint" cx="625" cy="700" r="10" />
  <circle class="CtlPoint" cx="725" cy="700" r="10" />
  <circle class="CtlPoint" cx="875" cy="900" r="10" />
  <circle class="AutoCtlPoint" cx="775" cy="900" r="9" />
  <text class="Label" x="750" y="945">M600,800 C625,700 725,700 750,800</text>
  <text class="Label" x="750" y="975">S875,900 900,800</text>
</svg>
''',


# http://www.w3.org/TR/SVG/images/paths/arcs01.svg
arcs01 = ('''\
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg width="12cm" height="5.25cm" viewBox="0 0 1200 400"
     xmlns="http://www.w3.org/2000/svg" version="1.1">
  <title>Example arcs01 - arc commands in path data</title>
  <desc>Picture of a pie chart with two pie wedges and
        a picture of a line with arc blips</desc>
  <rect x="1" y="1" width="1198" height="398"
        fill="none" stroke="blue" stroke-width="1" />

  <path d="M300,200 h-150 a150,150 0 1,0 150,-150 z"
        fill="red" stroke="blue" stroke-width="5" />
  <path d="M275,175 v-150 a150,150 0 0,0 -150,150 z"
        fill="yellow" stroke="blue" stroke-width="5" />

  <path d="M600,350 l 50,-25
           a25,25 -30 0,1 50,-25 l 50,-25
           a25,50 -30 0,1 50,-25 l 50,-25
           a25,75 -30 0,1 50,-25 l 50,-25
           a25,100 -30 0,1 50,-25 l 50,-25"
        fill="none" stroke="red" stroke-width="5"  />
</svg>
''',
[[[600,350],[612,344],[625,337],[637,331],[650,325],[647,314],[648,304],[654,294],[662,288],[673,285],[684,286],[693,291],[700,300],[712,294],[725,288],[737,281],[750,275],[741,255],[738,237],[740,222],[748,214],[760,213],[773,219],[787,232],[800,250],[812,244],[825,237],[838,231],[850,225],[836,196],[828,170],[827,150],[834,140],[847,141],[863,152],[882,173],[900,200],[912,194],[925,188],[938,181],[950,175],[930,136],[918,103],[914,78],[920,66],[934,68],[953,85],[976,113],[1000,150],[1012,144],[1025,137],[1037,131],[1050,125]],[[275,175],[275,137],[275,100],[275,62],[275,25],[217,37],[169,69],[137,117],[125,175],[148,175],[200,175],[252,175],[275,175]],[[300,200],[262,200],[225,200],[187,200],[150,200],[162,258],[194,306],[242,338],[300,350],[358,338],[406,306],[438,258],[450,200],[438,142],[406,94],[358,62],[300,50],[300,73],[300,125],[300,177],[300,200]],[[1,1],[301,1],[600,1],[900,1],[1199,1],[1199,101],[1199,200],[1199,300],[1199,399],[900,399],[600,399],[301,399],[1,399],[1,300],[1,200],[1,101],[1,1]]])

# Part of http://www.w3.org/TR/SVG/images/paths/arcs02.svg
arcs02 = ('''\
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg width="12cm" height="5.25cm" viewBox="0 0 1200 525" version="1.1"
     xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Example arcs02 - arc options in paths</title>
  <desc>Pictures showing the result of setting
        large-arc-flag and sweep-flag to the four
        possible combinations of 0 and 1.</desc>
  <g font-family="Verdana" >
    <rect x="1" y="1" width="1198" height="523"
          fill="none" stroke="blue" stroke-width="1" />

    <g font-size="30" >
      <g transform="translate(400,0)">
        <path d="M 125,75 a100,50 0 0,0 100,50"
              fill="none" stroke="red" stroke-width="6" />
      </g>
      <g transform="translate(800,0)">
        <path d="M 125,75 a100,50 0 0,1 100,50"
              fill="none" stroke="red" stroke-width="6" />
      </g>
      <g transform="translate(400,250)">
        <path d="M 125,75 a100,50 0 1,0 100,50"
              fill="none" stroke="red" stroke-width="6" />
      </g>
      <g transform="translate(800,250)">
        <path d="M 125,75 a100,50 0 1,1 100,50"
              fill="none" stroke="red" stroke-width="6" />
      </g>
    </g>
  </g>
</svg>
''',
[[[925,325],[933,306],[954,290],[986,279],[1025,275],[1064,279],[1096,290],[1117,306],[1125,325],[1117,344],[1096,360],[1064,371],[1025,375]],[[525,325],[486,329],[454,340],[433,356],[425,375],[433,394],[454,410],[486,421],[525,425],[564,421],[596,410],[617,394],[625,375]],[[925,75],[964,79],[996,90],[1017,106],[1025,125]],[[525,75],[533,94],[554,110],[586,121],[625,125]],[[1,1],[301,1],[600,1],[900,1],[1199,1],[1199,132],[1199,263],[1199,393],[1199,524],[900,524],[600,524],[301,524],[1,524],[1,393],[1,263],[1,132],[1,1]]])

def svg_test(name,svg,known):
  beziers = svgstring_to_beziers(svg)
  sig = [rint(b.evaluate(4)).astype(int) for b in beziers]
  sig,known = map(compact_str,(sig,known))
  if sig!=known or '-dd' in sys.argv:
    print 'sig = %s'%sig
    if '-d' in sys.argv or '-dd' in sys.argv:
      import pylab
      for bezier in beziers:
        X = bezier.evaluate(20)
        pylab.plot(X[:,0],-X[:,1])

      pylab.axes().set_aspect('equal')
      pylab.show()
    if '-dd' not in sys.argv:
      assert sig==known

def test_svg():
  svg_test('cubic02',*cubic02)
  svg_test('arcs01',*arcs01)
  svg_test('arcs02',*arcs02)

if __name__=='__main__':
  test_svg()
