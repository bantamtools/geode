#!/usr/bin/env python

from __future__ import division
from geode import *
from numpy import *

n = arange(1,11)

alpha = zeros(n.max()+1)
lam = .375+.25*cos(2*pi/n)
alpha[n] = 1-lam*(4+lam*(5*lam-8))/(2*(1-lam))+sqr(lam)
alpha[3] = .4375
alpha[4] = .5
alpha[5] = (81-5*sqrt(5))/128

beta = zeros(n.max()+1)
lam = .375+.25*cos((2*pi)/n)
beta[n] = lam*(4+lam*(5*lam-8))/(2*(1-lam))
beta[3] = .625
beta[4] = 41/64
beta[5] = (31+5*sqrt(5))/64

weights = zeros((n.max()+1,)*2)
m = n.reshape(-1,1)
j = arange(n.max()+1).reshape(1,-1)
def u(m,j):
  return cos(2*pi/m*j)
lam = .375+.25*cos(2*pi/m)
weights[m,j] = 2*cube(lam)/(m*(1-lam))*(1+u(m,j))*sqr(1/lam-1.5+u(m,j))
weights[3,j] = 1/6*(1.25+u(3,j))
weights[4,j] = .5*sqr(.5+.375*u(4,j))
weights[5,j] = (3+sqrt(5))/32*sqr((5-sqrt(5))/5+u(5,j))
weights[m,j] *= j<m

def init(a):
  if a.ndim==0:
    return '0' if a==0 else repr(a)
  else:
    a = map(init,a)
    while len(a) and a[-1]=='0':
      a = a[:-1]
    return '{%s}'%','.join(a)

def check(n):
  return '(unsigned)(degree-%d)<%d'%(n[0],len(n))

info = '  // Generated by loop-helper script'
print info
print '  static const double alpha[%d] = %s;'%(len(n),init(alpha[n]))
print '  if (%s)\n    return alpha[degree-%d];'%(check(n),n[0])
print
print info
print '  static const double beta[%d] = %s;'%(len(n),init(beta[n]))
print '  if (%s)\n    return beta[degree-%d];'%(check(n),n[0])
print

n = arange(3,11)
j = arange(n.max()+1)
print info
print '  assert((unsigned)j<(unsigned)degree);'
print '  static const double weights[%d][%d] = %s;'%(len(n),len(j),init(weights[n[...,None],j[None,...]]))
print '  if (%s)\n    return weights[degree-%d][j];'%(check(n),n[0])
