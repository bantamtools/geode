#!/usr/bin/env python

from __future__ import division
from geode import *

# Nice numbers
nice_map = {0:'0',1:'1',sqrt(1/2):'s'}
def nice(x):
  for y,s in nice_map.items():
    if abs(x-y)<1e-10:
      return s
    if abs(x+y)<1e-10:
      return '-'+s
  s = str(x)
  if s.startswith('0.'):
    s = s[1:]
  elif s.startswith('-0.'):
    s = '-'+s[2:]
  return s

# Octahedral group
octahedral_group = []
for i in range(3):
  for si in 1,-1:
    x = zeros(3)
    x[i] = si
    for j in range(3):
      if i != j:
        y = zeros(3)
        k = 3-i-j
        for sj in 1,-1:
          y[j] = sj 
          octahedral_group.append(Rotation.from_matrix(vstack([x,y,cross(x,y)]).T.copy()))
assert len(octahedral_group)==24
print 'const Rotation<TV> octahedral_group[24] = {%s};'%','.join('Q(%s)'%','.join(map(nice,r.sv)) for r in octahedral_group)
