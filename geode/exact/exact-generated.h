// Autogenerated by exact/gen-exact.  Do not edit directly!

static_assert(sizeof(mp_limb_t)==8 && sizeof(Quantized)==8,
              "The generated routines below are for 64-bit use only");

#define ADDER(op,i) { \
  const auto t = __uint128_t(x.n[i]) op y.n[i] op carry; \
  carry = t>>64; \
  r.n[i] = uint64_t(t); }
GEODE_PURE static inline Exact<1> operator+(const Exact<1> x, const Exact<1> y) {
  Exact<1> r(uninit);
  bool carry = 0;
  ADDER(+,0)
  return r;
}
GEODE_PURE static inline Exact<1> operator-(const Exact<1> x, const Exact<1> y) {
  Exact<1> r(uninit);
  bool carry = 0;
  ADDER(-,0)
  return r;
}
GEODE_PURE static inline Exact<2> operator+(const Exact<2> x, const Exact<2> y) {
  Exact<2> r(uninit);
  bool carry = 0;
  ADDER(+,0) ADDER(+,1)
  return r;
}
GEODE_PURE static inline Exact<2> operator-(const Exact<2> x, const Exact<2> y) {
  Exact<2> r(uninit);
  bool carry = 0;
  ADDER(-,0) ADDER(-,1)
  return r;
}
GEODE_PURE static inline Exact<3> operator+(const Exact<3> x, const Exact<3> y) {
  Exact<3> r(uninit);
  bool carry = 0;
  ADDER(+,0) ADDER(+,1) ADDER(+,2)
  return r;
}
GEODE_PURE static inline Exact<3> operator-(const Exact<3> x, const Exact<3> y) {
  Exact<3> r(uninit);
  bool carry = 0;
  ADDER(-,0) ADDER(-,1) ADDER(-,2)
  return r;
}
GEODE_PURE static inline Exact<4> operator+(const Exact<4> x, const Exact<4> y) {
  Exact<4> r(uninit);
  bool carry = 0;
  ADDER(+,0) ADDER(+,1) ADDER(+,2) ADDER(+,3)
  return r;
}
GEODE_PURE static inline Exact<4> operator-(const Exact<4> x, const Exact<4> y) {
  Exact<4> r(uninit);
  bool carry = 0;
  ADDER(-,0) ADDER(-,1) ADDER(-,2) ADDER(-,3)
  return r;
}
GEODE_PURE static inline Exact<5> operator+(const Exact<5> x, const Exact<5> y) {
  Exact<5> r(uninit);
  bool carry = 0;
  ADDER(+,0) ADDER(+,1) ADDER(+,2) ADDER(+,3) ADDER(+,4)
  return r;
}
GEODE_PURE static inline Exact<5> operator-(const Exact<5> x, const Exact<5> y) {
  Exact<5> r(uninit);
  bool carry = 0;
  ADDER(-,0) ADDER(-,1) ADDER(-,2) ADDER(-,3) ADDER(-,4)
  return r;
}
GEODE_PURE static inline Exact<6> operator+(const Exact<6> x, const Exact<6> y) {
  Exact<6> r(uninit);
  bool carry = 0;
  ADDER(+,0) ADDER(+,1) ADDER(+,2) ADDER(+,3) ADDER(+,4) ADDER(+,5)
  return r;
}
GEODE_PURE static inline Exact<6> operator-(const Exact<6> x, const Exact<6> y) {
  Exact<6> r(uninit);
  bool carry = 0;
  ADDER(-,0) ADDER(-,1) ADDER(-,2) ADDER(-,3) ADDER(-,4) ADDER(-,5)
  return r;
}
GEODE_PURE static inline Exact<7> operator+(const Exact<7> x, const Exact<7> y) {
  Exact<7> r(uninit);
  bool carry = 0;
  ADDER(+,0) ADDER(+,1) ADDER(+,2) ADDER(+,3) ADDER(+,4) ADDER(+,5) ADDER(+,6)
  return r;
}
GEODE_PURE static inline Exact<7> operator-(const Exact<7> x, const Exact<7> y) {
  Exact<7> r(uninit);
  bool carry = 0;
  ADDER(-,0) ADDER(-,1) ADDER(-,2) ADDER(-,3) ADDER(-,4) ADDER(-,5) ADDER(-,6)
  return r;
}
GEODE_PURE static inline Exact<8> operator+(const Exact<8> x, const Exact<8> y) {
  Exact<8> r(uninit);
  bool carry = 0;
  ADDER(+,0) ADDER(+,1) ADDER(+,2) ADDER(+,3) ADDER(+,4) ADDER(+,5) ADDER(+,6) ADDER(+,7)
  return r;
}
GEODE_PURE static inline Exact<8> operator-(const Exact<8> x, const Exact<8> y) {
  Exact<8> r(uninit);
  bool carry = 0;
  ADDER(-,0) ADDER(-,1) ADDER(-,2) ADDER(-,3) ADDER(-,4) ADDER(-,5) ADDER(-,6) ADDER(-,7)
  return r;
}
GEODE_PURE static inline Exact<9> operator+(const Exact<9> x, const Exact<9> y) {
  Exact<9> r(uninit);
  bool carry = 0;
  ADDER(+,0) ADDER(+,1) ADDER(+,2) ADDER(+,3) ADDER(+,4) ADDER(+,5) ADDER(+,6) ADDER(+,7) ADDER(+,8)
  return r;
}
GEODE_PURE static inline Exact<9> operator-(const Exact<9> x, const Exact<9> y) {
  Exact<9> r(uninit);
  bool carry = 0;
  ADDER(-,0) ADDER(-,1) ADDER(-,2) ADDER(-,3) ADDER(-,4) ADDER(-,5) ADDER(-,6) ADDER(-,7) ADDER(-,8)
  return r;
}
GEODE_PURE static inline Exact<12> operator+(const Exact<12> x, const Exact<12> y) {
  Exact<12> r(uninit);
  bool carry = 0;
  ADDER(+,0) ADDER(+,1) ADDER(+,2) ADDER(+,3) ADDER(+,4) ADDER(+,5) ADDER(+,6) ADDER(+,7) ADDER(+,8) ADDER(+,9) ADDER(+,10) ADDER(+,11)
  return r;
}
GEODE_PURE static inline Exact<12> operator-(const Exact<12> x, const Exact<12> y) {
  Exact<12> r(uninit);
  bool carry = 0;
  ADDER(-,0) ADDER(-,1) ADDER(-,2) ADDER(-,3) ADDER(-,4) ADDER(-,5) ADDER(-,6) ADDER(-,7) ADDER(-,8) ADDER(-,9) ADDER(-,10) ADDER(-,11)
  return r;
}
GEODE_PURE static inline Exact<15> operator+(const Exact<15> x, const Exact<15> y) {
  Exact<15> r(uninit);
  bool carry = 0;
  ADDER(+,0) ADDER(+,1) ADDER(+,2) ADDER(+,3) ADDER(+,4) ADDER(+,5) ADDER(+,6) ADDER(+,7) ADDER(+,8) ADDER(+,9) ADDER(+,10) ADDER(+,11) ADDER(+,12) ADDER(+,13) ADDER(+,14)
  return r;
}
GEODE_PURE static inline Exact<15> operator-(const Exact<15> x, const Exact<15> y) {
  Exact<15> r(uninit);
  bool carry = 0;
  ADDER(-,0) ADDER(-,1) ADDER(-,2) ADDER(-,3) ADDER(-,4) ADDER(-,5) ADDER(-,6) ADDER(-,7) ADDER(-,8) ADDER(-,9) ADDER(-,10) ADDER(-,11) ADDER(-,12) ADDER(-,13) ADDER(-,14)
  return r;
}
GEODE_PURE static inline Exact<2> operator*(const Exact<1> x, const Exact<1> y) {
  Exact<2> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(int64_t(x.n[0]))*B(int64_t(y.n[0]));
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  r.n[0] = uint64_t(t1);
  r.n[1] = uint64_t(t2);
  return r;
}
GEODE_PURE static inline Exact<2> sqr(const Exact<1> x) {
  Exact<2> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(int64_t(x.n[0]))*B(int64_t(x.n[0]));
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  r.n[0] = uint64_t(t1);
  r.n[1] = uint64_t(t2);
  return r;
}
GEODE_PURE static inline Exact<3> operator*(const Exact<2> x, const Exact<1> y) {
  Exact<3> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(int64_t(y.n[0]));
  const auto t1 = uint64_t(t0);
  const auto t2 = int64_t(t0>>64);
  const auto t3 = B(int64_t(x.n[1]))*B(int64_t(y.n[0]));
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  r.n[0] = uint64_t(t1);
  const auto t6 = B(t2)+B(t4);
  r.n[1] = uint64_t(t6);
  const auto t7 = int64_t(t6>>64);
  const auto t8 = B(t5)+B(t7);
  r.n[2] = uint64_t(t8);
  return r;
}
GEODE_PURE static inline Exact<4> operator*(const Exact<2> x, const Exact<2> y) {
  Exact<4> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(int64_t(y.n[1]));
  const auto t4 = uint64_t(t3);
  const auto t5 = int64_t(t3>>64);
  const auto t6 = B(int64_t(x.n[1]))*B(y.n[0]);
  const auto t7 = uint64_t(t6);
  const auto t8 = int64_t(t6>>64);
  const auto t9 = B(int64_t(x.n[1]))*B(int64_t(y.n[1]));
  const auto t10 = uint64_t(t9);
  const auto t11 = uint64_t(t9>>64);
  r.n[0] = uint64_t(t1);
  const auto t12 = B(t2)+B(t4)+B(t7);
  r.n[1] = uint64_t(t12);
  const auto t13 = int64_t(t12>>64);
  const auto t14 = B(t5)+B(t8)+B(t10)+B(t13);
  r.n[2] = uint64_t(t14);
  const auto t15 = int64_t(t14>>64);
  const auto t16 = B(t11)+B(t15);
  r.n[3] = uint64_t(t16);
  return r;
}
GEODE_PURE static inline Exact<4> sqr(const Exact<2> x) {
  Exact<4> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(x.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(int64_t(x.n[1]));
  const auto t4 = uint64_t(t3);
  const auto t5 = int64_t(t3>>64);
  const auto t6 = B(int64_t(x.n[1]))*B(x.n[0]);
  const auto t7 = uint64_t(t6);
  const auto t8 = int64_t(t6>>64);
  const auto t9 = B(int64_t(x.n[1]))*B(int64_t(x.n[1]));
  const auto t10 = uint64_t(t9);
  const auto t11 = uint64_t(t9>>64);
  r.n[0] = uint64_t(t1);
  const auto t12 = B(t2)+B(t4)+B(t7);
  r.n[1] = uint64_t(t12);
  const auto t13 = int64_t(t12>>64);
  const auto t14 = B(t5)+B(t8)+B(t10)+B(t13);
  r.n[2] = uint64_t(t14);
  const auto t15 = int64_t(t14>>64);
  const auto t16 = B(t11)+B(t15);
  r.n[3] = uint64_t(t16);
  return r;
}
GEODE_PURE static inline Exact<4> operator*(const Exact<3> x, const Exact<1> y) {
  Exact<4> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(int64_t(y.n[0]));
  const auto t1 = uint64_t(t0);
  const auto t2 = int64_t(t0>>64);
  const auto t3 = B(x.n[1])*B(int64_t(y.n[0]));
  const auto t4 = uint64_t(t3);
  const auto t5 = int64_t(t3>>64);
  const auto t6 = B(int64_t(x.n[2]))*B(int64_t(y.n[0]));
  const auto t7 = uint64_t(t6);
  const auto t8 = uint64_t(t6>>64);
  r.n[0] = uint64_t(t1);
  const auto t9 = B(t2)+B(t4);
  r.n[1] = uint64_t(t9);
  const auto t10 = int64_t(t9>>64);
  const auto t11 = B(t5)+B(t7)+B(t10);
  r.n[2] = uint64_t(t11);
  const auto t12 = int64_t(t11>>64);
  const auto t13 = B(t8)+B(t12);
  r.n[3] = uint64_t(t13);
  return r;
}
GEODE_PURE static inline Exact<5> operator*(const Exact<3> x, const Exact<2> y) {
  Exact<5> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(int64_t(y.n[1]));
  const auto t4 = uint64_t(t3);
  const auto t5 = int64_t(t3>>64);
  const auto t6 = B(x.n[1])*B(y.n[0]);
  const auto t7 = uint64_t(t6);
  const auto t8 = uint64_t(t6>>64);
  const auto t9 = B(x.n[1])*B(int64_t(y.n[1]));
  const auto t10 = uint64_t(t9);
  const auto t11 = int64_t(t9>>64);
  const auto t12 = B(int64_t(x.n[2]))*B(y.n[0]);
  const auto t13 = uint64_t(t12);
  const auto t14 = int64_t(t12>>64);
  const auto t15 = B(int64_t(x.n[2]))*B(int64_t(y.n[1]));
  const auto t16 = uint64_t(t15);
  const auto t17 = uint64_t(t15>>64);
  r.n[0] = uint64_t(t1);
  const auto t18 = B(t2)+B(t4)+B(t7);
  r.n[1] = uint64_t(t18);
  const auto t19 = int64_t(t18>>64);
  const auto t20 = B(t5)+B(t8)+B(t10)+B(t13)+B(t19);
  r.n[2] = uint64_t(t20);
  const auto t21 = int64_t(t20>>64);
  const auto t22 = B(t11)+B(t14)+B(t16)+B(t21);
  r.n[3] = uint64_t(t22);
  const auto t23 = int64_t(t22>>64);
  const auto t24 = B(t17)+B(t23);
  r.n[4] = uint64_t(t24);
  return r;
}
GEODE_PURE static inline Exact<6> operator*(const Exact<3> x, const Exact<3> y) {
  Exact<6> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(y.n[1]);
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  const auto t6 = B(x.n[0])*B(int64_t(y.n[2]));
  const auto t7 = uint64_t(t6);
  const auto t8 = int64_t(t6>>64);
  const auto t9 = B(x.n[1])*B(y.n[0]);
  const auto t10 = uint64_t(t9);
  const auto t11 = uint64_t(t9>>64);
  const auto t12 = B(x.n[1])*B(y.n[1]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[1])*B(int64_t(y.n[2]));
  const auto t16 = uint64_t(t15);
  const auto t17 = int64_t(t15>>64);
  const auto t18 = B(int64_t(x.n[2]))*B(y.n[0]);
  const auto t19 = uint64_t(t18);
  const auto t20 = int64_t(t18>>64);
  const auto t21 = B(int64_t(x.n[2]))*B(y.n[1]);
  const auto t22 = uint64_t(t21);
  const auto t23 = int64_t(t21>>64);
  const auto t24 = B(int64_t(x.n[2]))*B(int64_t(y.n[2]));
  const auto t25 = uint64_t(t24);
  const auto t26 = uint64_t(t24>>64);
  r.n[0] = uint64_t(t1);
  const auto t27 = B(t2)+B(t4)+B(t10);
  r.n[1] = uint64_t(t27);
  const auto t28 = int64_t(t27>>64);
  const auto t29 = B(t5)+B(t7)+B(t11)+B(t13)+B(t19)+B(t28);
  r.n[2] = uint64_t(t29);
  const auto t30 = int64_t(t29>>64);
  const auto t31 = B(t8)+B(t14)+B(t16)+B(t20)+B(t22)+B(t30);
  r.n[3] = uint64_t(t31);
  const auto t32 = int64_t(t31>>64);
  const auto t33 = B(t17)+B(t23)+B(t25)+B(t32);
  r.n[4] = uint64_t(t33);
  const auto t34 = int64_t(t33>>64);
  const auto t35 = B(t26)+B(t34);
  r.n[5] = uint64_t(t35);
  return r;
}
GEODE_PURE static inline Exact<6> sqr(const Exact<3> x) {
  Exact<6> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(x.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(x.n[1]);
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  const auto t6 = B(x.n[0])*B(int64_t(x.n[2]));
  const auto t7 = uint64_t(t6);
  const auto t8 = int64_t(t6>>64);
  const auto t9 = B(x.n[1])*B(x.n[0]);
  const auto t10 = uint64_t(t9);
  const auto t11 = uint64_t(t9>>64);
  const auto t12 = B(x.n[1])*B(x.n[1]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[1])*B(int64_t(x.n[2]));
  const auto t16 = uint64_t(t15);
  const auto t17 = int64_t(t15>>64);
  const auto t18 = B(int64_t(x.n[2]))*B(x.n[0]);
  const auto t19 = uint64_t(t18);
  const auto t20 = int64_t(t18>>64);
  const auto t21 = B(int64_t(x.n[2]))*B(x.n[1]);
  const auto t22 = uint64_t(t21);
  const auto t23 = int64_t(t21>>64);
  const auto t24 = B(int64_t(x.n[2]))*B(int64_t(x.n[2]));
  const auto t25 = uint64_t(t24);
  const auto t26 = uint64_t(t24>>64);
  r.n[0] = uint64_t(t1);
  const auto t27 = B(t2)+B(t4)+B(t10);
  r.n[1] = uint64_t(t27);
  const auto t28 = int64_t(t27>>64);
  const auto t29 = B(t5)+B(t7)+B(t11)+B(t13)+B(t19)+B(t28);
  r.n[2] = uint64_t(t29);
  const auto t30 = int64_t(t29>>64);
  const auto t31 = B(t8)+B(t14)+B(t16)+B(t20)+B(t22)+B(t30);
  r.n[3] = uint64_t(t31);
  const auto t32 = int64_t(t31>>64);
  const auto t33 = B(t17)+B(t23)+B(t25)+B(t32);
  r.n[4] = uint64_t(t33);
  const auto t34 = int64_t(t33>>64);
  const auto t35 = B(t26)+B(t34);
  r.n[5] = uint64_t(t35);
  return r;
}
GEODE_PURE static inline Exact<5> operator*(const Exact<4> x, const Exact<1> y) {
  Exact<5> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(int64_t(y.n[0]));
  const auto t1 = uint64_t(t0);
  const auto t2 = int64_t(t0>>64);
  const auto t3 = B(x.n[1])*B(int64_t(y.n[0]));
  const auto t4 = uint64_t(t3);
  const auto t5 = int64_t(t3>>64);
  const auto t6 = B(x.n[2])*B(int64_t(y.n[0]));
  const auto t7 = uint64_t(t6);
  const auto t8 = int64_t(t6>>64);
  const auto t9 = B(int64_t(x.n[3]))*B(int64_t(y.n[0]));
  const auto t10 = uint64_t(t9);
  const auto t11 = uint64_t(t9>>64);
  r.n[0] = uint64_t(t1);
  const auto t12 = B(t2)+B(t4);
  r.n[1] = uint64_t(t12);
  const auto t13 = int64_t(t12>>64);
  const auto t14 = B(t5)+B(t7)+B(t13);
  r.n[2] = uint64_t(t14);
  const auto t15 = int64_t(t14>>64);
  const auto t16 = B(t8)+B(t10)+B(t15);
  r.n[3] = uint64_t(t16);
  const auto t17 = int64_t(t16>>64);
  const auto t18 = B(t11)+B(t17);
  r.n[4] = uint64_t(t18);
  return r;
}
GEODE_PURE static inline Exact<6> operator*(const Exact<4> x, const Exact<2> y) {
  Exact<6> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(int64_t(y.n[1]));
  const auto t4 = uint64_t(t3);
  const auto t5 = int64_t(t3>>64);
  const auto t6 = B(x.n[1])*B(y.n[0]);
  const auto t7 = uint64_t(t6);
  const auto t8 = uint64_t(t6>>64);
  const auto t9 = B(x.n[1])*B(int64_t(y.n[1]));
  const auto t10 = uint64_t(t9);
  const auto t11 = int64_t(t9>>64);
  const auto t12 = B(x.n[2])*B(y.n[0]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[2])*B(int64_t(y.n[1]));
  const auto t16 = uint64_t(t15);
  const auto t17 = int64_t(t15>>64);
  const auto t18 = B(int64_t(x.n[3]))*B(y.n[0]);
  const auto t19 = uint64_t(t18);
  const auto t20 = int64_t(t18>>64);
  const auto t21 = B(int64_t(x.n[3]))*B(int64_t(y.n[1]));
  const auto t22 = uint64_t(t21);
  const auto t23 = uint64_t(t21>>64);
  r.n[0] = uint64_t(t1);
  const auto t24 = B(t2)+B(t4)+B(t7);
  r.n[1] = uint64_t(t24);
  const auto t25 = int64_t(t24>>64);
  const auto t26 = B(t5)+B(t8)+B(t10)+B(t13)+B(t25);
  r.n[2] = uint64_t(t26);
  const auto t27 = int64_t(t26>>64);
  const auto t28 = B(t11)+B(t14)+B(t16)+B(t19)+B(t27);
  r.n[3] = uint64_t(t28);
  const auto t29 = int64_t(t28>>64);
  const auto t30 = B(t17)+B(t20)+B(t22)+B(t29);
  r.n[4] = uint64_t(t30);
  const auto t31 = int64_t(t30>>64);
  const auto t32 = B(t23)+B(t31);
  r.n[5] = uint64_t(t32);
  return r;
}
GEODE_PURE static inline Exact<7> operator*(const Exact<4> x, const Exact<3> y) {
  Exact<7> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(y.n[1]);
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  const auto t6 = B(x.n[0])*B(int64_t(y.n[2]));
  const auto t7 = uint64_t(t6);
  const auto t8 = int64_t(t6>>64);
  const auto t9 = B(x.n[1])*B(y.n[0]);
  const auto t10 = uint64_t(t9);
  const auto t11 = uint64_t(t9>>64);
  const auto t12 = B(x.n[1])*B(y.n[1]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[1])*B(int64_t(y.n[2]));
  const auto t16 = uint64_t(t15);
  const auto t17 = int64_t(t15>>64);
  const auto t18 = B(x.n[2])*B(y.n[0]);
  const auto t19 = uint64_t(t18);
  const auto t20 = uint64_t(t18>>64);
  const auto t21 = B(x.n[2])*B(y.n[1]);
  const auto t22 = uint64_t(t21);
  const auto t23 = uint64_t(t21>>64);
  const auto t24 = B(x.n[2])*B(int64_t(y.n[2]));
  const auto t25 = uint64_t(t24);
  const auto t26 = int64_t(t24>>64);
  const auto t27 = B(int64_t(x.n[3]))*B(y.n[0]);
  const auto t28 = uint64_t(t27);
  const auto t29 = int64_t(t27>>64);
  const auto t30 = B(int64_t(x.n[3]))*B(y.n[1]);
  const auto t31 = uint64_t(t30);
  const auto t32 = int64_t(t30>>64);
  const auto t33 = B(int64_t(x.n[3]))*B(int64_t(y.n[2]));
  const auto t34 = uint64_t(t33);
  const auto t35 = uint64_t(t33>>64);
  r.n[0] = uint64_t(t1);
  const auto t36 = B(t2)+B(t4)+B(t10);
  r.n[1] = uint64_t(t36);
  const auto t37 = int64_t(t36>>64);
  const auto t38 = B(t5)+B(t7)+B(t11)+B(t13)+B(t19)+B(t37);
  r.n[2] = uint64_t(t38);
  const auto t39 = int64_t(t38>>64);
  const auto t40 = B(t8)+B(t14)+B(t16)+B(t20)+B(t22)+B(t28)+B(t39);
  r.n[3] = uint64_t(t40);
  const auto t41 = int64_t(t40>>64);
  const auto t42 = B(t17)+B(t23)+B(t25)+B(t29)+B(t31)+B(t41);
  r.n[4] = uint64_t(t42);
  const auto t43 = int64_t(t42>>64);
  const auto t44 = B(t26)+B(t32)+B(t34)+B(t43);
  r.n[5] = uint64_t(t44);
  const auto t45 = int64_t(t44>>64);
  const auto t46 = B(t35)+B(t45);
  r.n[6] = uint64_t(t46);
  return r;
}
GEODE_PURE static inline Exact<8> operator*(const Exact<4> x, const Exact<4> y) {
  Exact<8> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(y.n[1]);
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  const auto t6 = B(x.n[0])*B(y.n[2]);
  const auto t7 = uint64_t(t6);
  const auto t8 = uint64_t(t6>>64);
  const auto t9 = B(x.n[0])*B(int64_t(y.n[3]));
  const auto t10 = uint64_t(t9);
  const auto t11 = int64_t(t9>>64);
  const auto t12 = B(x.n[1])*B(y.n[0]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[1])*B(y.n[1]);
  const auto t16 = uint64_t(t15);
  const auto t17 = uint64_t(t15>>64);
  const auto t18 = B(x.n[1])*B(y.n[2]);
  const auto t19 = uint64_t(t18);
  const auto t20 = uint64_t(t18>>64);
  const auto t21 = B(x.n[1])*B(int64_t(y.n[3]));
  const auto t22 = uint64_t(t21);
  const auto t23 = int64_t(t21>>64);
  const auto t24 = B(x.n[2])*B(y.n[0]);
  const auto t25 = uint64_t(t24);
  const auto t26 = uint64_t(t24>>64);
  const auto t27 = B(x.n[2])*B(y.n[1]);
  const auto t28 = uint64_t(t27);
  const auto t29 = uint64_t(t27>>64);
  const auto t30 = B(x.n[2])*B(y.n[2]);
  const auto t31 = uint64_t(t30);
  const auto t32 = uint64_t(t30>>64);
  const auto t33 = B(x.n[2])*B(int64_t(y.n[3]));
  const auto t34 = uint64_t(t33);
  const auto t35 = int64_t(t33>>64);
  const auto t36 = B(int64_t(x.n[3]))*B(y.n[0]);
  const auto t37 = uint64_t(t36);
  const auto t38 = int64_t(t36>>64);
  const auto t39 = B(int64_t(x.n[3]))*B(y.n[1]);
  const auto t40 = uint64_t(t39);
  const auto t41 = int64_t(t39>>64);
  const auto t42 = B(int64_t(x.n[3]))*B(y.n[2]);
  const auto t43 = uint64_t(t42);
  const auto t44 = int64_t(t42>>64);
  const auto t45 = B(int64_t(x.n[3]))*B(int64_t(y.n[3]));
  const auto t46 = uint64_t(t45);
  const auto t47 = uint64_t(t45>>64);
  r.n[0] = uint64_t(t1);
  const auto t48 = B(t2)+B(t4)+B(t13);
  r.n[1] = uint64_t(t48);
  const auto t49 = int64_t(t48>>64);
  const auto t50 = B(t5)+B(t7)+B(t14)+B(t16)+B(t25)+B(t49);
  r.n[2] = uint64_t(t50);
  const auto t51 = int64_t(t50>>64);
  const auto t52 = B(t8)+B(t10)+B(t17)+B(t19)+B(t26)+B(t28)+B(t37)+B(t51);
  r.n[3] = uint64_t(t52);
  const auto t53 = int64_t(t52>>64);
  const auto t54 = B(t11)+B(t20)+B(t22)+B(t29)+B(t31)+B(t38)+B(t40)+B(t53);
  r.n[4] = uint64_t(t54);
  const auto t55 = int64_t(t54>>64);
  const auto t56 = B(t23)+B(t32)+B(t34)+B(t41)+B(t43)+B(t55);
  r.n[5] = uint64_t(t56);
  const auto t57 = int64_t(t56>>64);
  const auto t58 = B(t35)+B(t44)+B(t46)+B(t57);
  r.n[6] = uint64_t(t58);
  const auto t59 = int64_t(t58>>64);
  const auto t60 = B(t47)+B(t59);
  r.n[7] = uint64_t(t60);
  return r;
}
GEODE_PURE static inline Exact<8> sqr(const Exact<4> x) {
  Exact<8> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(x.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(x.n[1]);
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  const auto t6 = B(x.n[0])*B(x.n[2]);
  const auto t7 = uint64_t(t6);
  const auto t8 = uint64_t(t6>>64);
  const auto t9 = B(x.n[0])*B(int64_t(x.n[3]));
  const auto t10 = uint64_t(t9);
  const auto t11 = int64_t(t9>>64);
  const auto t12 = B(x.n[1])*B(x.n[0]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[1])*B(x.n[1]);
  const auto t16 = uint64_t(t15);
  const auto t17 = uint64_t(t15>>64);
  const auto t18 = B(x.n[1])*B(x.n[2]);
  const auto t19 = uint64_t(t18);
  const auto t20 = uint64_t(t18>>64);
  const auto t21 = B(x.n[1])*B(int64_t(x.n[3]));
  const auto t22 = uint64_t(t21);
  const auto t23 = int64_t(t21>>64);
  const auto t24 = B(x.n[2])*B(x.n[0]);
  const auto t25 = uint64_t(t24);
  const auto t26 = uint64_t(t24>>64);
  const auto t27 = B(x.n[2])*B(x.n[1]);
  const auto t28 = uint64_t(t27);
  const auto t29 = uint64_t(t27>>64);
  const auto t30 = B(x.n[2])*B(x.n[2]);
  const auto t31 = uint64_t(t30);
  const auto t32 = uint64_t(t30>>64);
  const auto t33 = B(x.n[2])*B(int64_t(x.n[3]));
  const auto t34 = uint64_t(t33);
  const auto t35 = int64_t(t33>>64);
  const auto t36 = B(int64_t(x.n[3]))*B(x.n[0]);
  const auto t37 = uint64_t(t36);
  const auto t38 = int64_t(t36>>64);
  const auto t39 = B(int64_t(x.n[3]))*B(x.n[1]);
  const auto t40 = uint64_t(t39);
  const auto t41 = int64_t(t39>>64);
  const auto t42 = B(int64_t(x.n[3]))*B(x.n[2]);
  const auto t43 = uint64_t(t42);
  const auto t44 = int64_t(t42>>64);
  const auto t45 = B(int64_t(x.n[3]))*B(int64_t(x.n[3]));
  const auto t46 = uint64_t(t45);
  const auto t47 = uint64_t(t45>>64);
  r.n[0] = uint64_t(t1);
  const auto t48 = B(t2)+B(t4)+B(t13);
  r.n[1] = uint64_t(t48);
  const auto t49 = int64_t(t48>>64);
  const auto t50 = B(t5)+B(t7)+B(t14)+B(t16)+B(t25)+B(t49);
  r.n[2] = uint64_t(t50);
  const auto t51 = int64_t(t50>>64);
  const auto t52 = B(t8)+B(t10)+B(t17)+B(t19)+B(t26)+B(t28)+B(t37)+B(t51);
  r.n[3] = uint64_t(t52);
  const auto t53 = int64_t(t52>>64);
  const auto t54 = B(t11)+B(t20)+B(t22)+B(t29)+B(t31)+B(t38)+B(t40)+B(t53);
  r.n[4] = uint64_t(t54);
  const auto t55 = int64_t(t54>>64);
  const auto t56 = B(t23)+B(t32)+B(t34)+B(t41)+B(t43)+B(t55);
  r.n[5] = uint64_t(t56);
  const auto t57 = int64_t(t56>>64);
  const auto t58 = B(t35)+B(t44)+B(t46)+B(t57);
  r.n[6] = uint64_t(t58);
  const auto t59 = int64_t(t58>>64);
  const auto t60 = B(t47)+B(t59);
  r.n[7] = uint64_t(t60);
  return r;
}
GEODE_PURE static inline Exact<9> operator*(const Exact<5> x, const Exact<4> y) {
  Exact<9> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(y.n[1]);
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  const auto t6 = B(x.n[0])*B(y.n[2]);
  const auto t7 = uint64_t(t6);
  const auto t8 = uint64_t(t6>>64);
  const auto t9 = B(x.n[0])*B(int64_t(y.n[3]));
  const auto t10 = uint64_t(t9);
  const auto t11 = int64_t(t9>>64);
  const auto t12 = B(x.n[1])*B(y.n[0]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[1])*B(y.n[1]);
  const auto t16 = uint64_t(t15);
  const auto t17 = uint64_t(t15>>64);
  const auto t18 = B(x.n[1])*B(y.n[2]);
  const auto t19 = uint64_t(t18);
  const auto t20 = uint64_t(t18>>64);
  const auto t21 = B(x.n[1])*B(int64_t(y.n[3]));
  const auto t22 = uint64_t(t21);
  const auto t23 = int64_t(t21>>64);
  const auto t24 = B(x.n[2])*B(y.n[0]);
  const auto t25 = uint64_t(t24);
  const auto t26 = uint64_t(t24>>64);
  const auto t27 = B(x.n[2])*B(y.n[1]);
  const auto t28 = uint64_t(t27);
  const auto t29 = uint64_t(t27>>64);
  const auto t30 = B(x.n[2])*B(y.n[2]);
  const auto t31 = uint64_t(t30);
  const auto t32 = uint64_t(t30>>64);
  const auto t33 = B(x.n[2])*B(int64_t(y.n[3]));
  const auto t34 = uint64_t(t33);
  const auto t35 = int64_t(t33>>64);
  const auto t36 = B(x.n[3])*B(y.n[0]);
  const auto t37 = uint64_t(t36);
  const auto t38 = uint64_t(t36>>64);
  const auto t39 = B(x.n[3])*B(y.n[1]);
  const auto t40 = uint64_t(t39);
  const auto t41 = uint64_t(t39>>64);
  const auto t42 = B(x.n[3])*B(y.n[2]);
  const auto t43 = uint64_t(t42);
  const auto t44 = uint64_t(t42>>64);
  const auto t45 = B(x.n[3])*B(int64_t(y.n[3]));
  const auto t46 = uint64_t(t45);
  const auto t47 = int64_t(t45>>64);
  const auto t48 = B(int64_t(x.n[4]))*B(y.n[0]);
  const auto t49 = uint64_t(t48);
  const auto t50 = int64_t(t48>>64);
  const auto t51 = B(int64_t(x.n[4]))*B(y.n[1]);
  const auto t52 = uint64_t(t51);
  const auto t53 = int64_t(t51>>64);
  const auto t54 = B(int64_t(x.n[4]))*B(y.n[2]);
  const auto t55 = uint64_t(t54);
  const auto t56 = int64_t(t54>>64);
  const auto t57 = B(int64_t(x.n[4]))*B(int64_t(y.n[3]));
  const auto t58 = uint64_t(t57);
  const auto t59 = uint64_t(t57>>64);
  r.n[0] = uint64_t(t1);
  const auto t60 = B(t2)+B(t4)+B(t13);
  r.n[1] = uint64_t(t60);
  const auto t61 = int64_t(t60>>64);
  const auto t62 = B(t5)+B(t7)+B(t14)+B(t16)+B(t25)+B(t61);
  r.n[2] = uint64_t(t62);
  const auto t63 = int64_t(t62>>64);
  const auto t64 = B(t8)+B(t10)+B(t17)+B(t19)+B(t26)+B(t28)+B(t37)+B(t63);
  r.n[3] = uint64_t(t64);
  const auto t65 = int64_t(t64>>64);
  const auto t66 = B(t11)+B(t20)+B(t22)+B(t29)+B(t31)+B(t38)+B(t40)+B(t49)+B(t65);
  r.n[4] = uint64_t(t66);
  const auto t67 = int64_t(t66>>64);
  const auto t68 = B(t23)+B(t32)+B(t34)+B(t41)+B(t43)+B(t50)+B(t52)+B(t67);
  r.n[5] = uint64_t(t68);
  const auto t69 = int64_t(t68>>64);
  const auto t70 = B(t35)+B(t44)+B(t46)+B(t53)+B(t55)+B(t69);
  r.n[6] = uint64_t(t70);
  const auto t71 = int64_t(t70>>64);
  const auto t72 = B(t47)+B(t56)+B(t58)+B(t71);
  r.n[7] = uint64_t(t72);
  const auto t73 = int64_t(t72>>64);
  const auto t74 = B(t59)+B(t73);
  r.n[8] = uint64_t(t74);
  return r;
}
GEODE_PURE static inline Exact<7> operator*(const Exact<6> x, const Exact<1> y) {
  Exact<7> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(int64_t(y.n[0]));
  const auto t1 = uint64_t(t0);
  const auto t2 = int64_t(t0>>64);
  const auto t3 = B(x.n[1])*B(int64_t(y.n[0]));
  const auto t4 = uint64_t(t3);
  const auto t5 = int64_t(t3>>64);
  const auto t6 = B(x.n[2])*B(int64_t(y.n[0]));
  const auto t7 = uint64_t(t6);
  const auto t8 = int64_t(t6>>64);
  const auto t9 = B(x.n[3])*B(int64_t(y.n[0]));
  const auto t10 = uint64_t(t9);
  const auto t11 = int64_t(t9>>64);
  const auto t12 = B(x.n[4])*B(int64_t(y.n[0]));
  const auto t13 = uint64_t(t12);
  const auto t14 = int64_t(t12>>64);
  const auto t15 = B(int64_t(x.n[5]))*B(int64_t(y.n[0]));
  const auto t16 = uint64_t(t15);
  const auto t17 = uint64_t(t15>>64);
  r.n[0] = uint64_t(t1);
  const auto t18 = B(t2)+B(t4);
  r.n[1] = uint64_t(t18);
  const auto t19 = int64_t(t18>>64);
  const auto t20 = B(t5)+B(t7)+B(t19);
  r.n[2] = uint64_t(t20);
  const auto t21 = int64_t(t20>>64);
  const auto t22 = B(t8)+B(t10)+B(t21);
  r.n[3] = uint64_t(t22);
  const auto t23 = int64_t(t22>>64);
  const auto t24 = B(t11)+B(t13)+B(t23);
  r.n[4] = uint64_t(t24);
  const auto t25 = int64_t(t24>>64);
  const auto t26 = B(t14)+B(t16)+B(t25);
  r.n[5] = uint64_t(t26);
  const auto t27 = int64_t(t26>>64);
  const auto t28 = B(t17)+B(t27);
  r.n[6] = uint64_t(t28);
  return r;
}
GEODE_PURE static inline Exact<8> operator*(const Exact<6> x, const Exact<2> y) {
  Exact<8> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(int64_t(y.n[1]));
  const auto t4 = uint64_t(t3);
  const auto t5 = int64_t(t3>>64);
  const auto t6 = B(x.n[1])*B(y.n[0]);
  const auto t7 = uint64_t(t6);
  const auto t8 = uint64_t(t6>>64);
  const auto t9 = B(x.n[1])*B(int64_t(y.n[1]));
  const auto t10 = uint64_t(t9);
  const auto t11 = int64_t(t9>>64);
  const auto t12 = B(x.n[2])*B(y.n[0]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[2])*B(int64_t(y.n[1]));
  const auto t16 = uint64_t(t15);
  const auto t17 = int64_t(t15>>64);
  const auto t18 = B(x.n[3])*B(y.n[0]);
  const auto t19 = uint64_t(t18);
  const auto t20 = uint64_t(t18>>64);
  const auto t21 = B(x.n[3])*B(int64_t(y.n[1]));
  const auto t22 = uint64_t(t21);
  const auto t23 = int64_t(t21>>64);
  const auto t24 = B(x.n[4])*B(y.n[0]);
  const auto t25 = uint64_t(t24);
  const auto t26 = uint64_t(t24>>64);
  const auto t27 = B(x.n[4])*B(int64_t(y.n[1]));
  const auto t28 = uint64_t(t27);
  const auto t29 = int64_t(t27>>64);
  const auto t30 = B(int64_t(x.n[5]))*B(y.n[0]);
  const auto t31 = uint64_t(t30);
  const auto t32 = int64_t(t30>>64);
  const auto t33 = B(int64_t(x.n[5]))*B(int64_t(y.n[1]));
  const auto t34 = uint64_t(t33);
  const auto t35 = uint64_t(t33>>64);
  r.n[0] = uint64_t(t1);
  const auto t36 = B(t2)+B(t4)+B(t7);
  r.n[1] = uint64_t(t36);
  const auto t37 = int64_t(t36>>64);
  const auto t38 = B(t5)+B(t8)+B(t10)+B(t13)+B(t37);
  r.n[2] = uint64_t(t38);
  const auto t39 = int64_t(t38>>64);
  const auto t40 = B(t11)+B(t14)+B(t16)+B(t19)+B(t39);
  r.n[3] = uint64_t(t40);
  const auto t41 = int64_t(t40>>64);
  const auto t42 = B(t17)+B(t20)+B(t22)+B(t25)+B(t41);
  r.n[4] = uint64_t(t42);
  const auto t43 = int64_t(t42>>64);
  const auto t44 = B(t23)+B(t26)+B(t28)+B(t31)+B(t43);
  r.n[5] = uint64_t(t44);
  const auto t45 = int64_t(t44>>64);
  const auto t46 = B(t29)+B(t32)+B(t34)+B(t45);
  r.n[6] = uint64_t(t46);
  const auto t47 = int64_t(t46>>64);
  const auto t48 = B(t35)+B(t47);
  r.n[7] = uint64_t(t48);
  return r;
}
GEODE_PURE static inline Exact<9> operator*(const Exact<6> x, const Exact<3> y) {
  Exact<9> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(y.n[1]);
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  const auto t6 = B(x.n[0])*B(int64_t(y.n[2]));
  const auto t7 = uint64_t(t6);
  const auto t8 = int64_t(t6>>64);
  const auto t9 = B(x.n[1])*B(y.n[0]);
  const auto t10 = uint64_t(t9);
  const auto t11 = uint64_t(t9>>64);
  const auto t12 = B(x.n[1])*B(y.n[1]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[1])*B(int64_t(y.n[2]));
  const auto t16 = uint64_t(t15);
  const auto t17 = int64_t(t15>>64);
  const auto t18 = B(x.n[2])*B(y.n[0]);
  const auto t19 = uint64_t(t18);
  const auto t20 = uint64_t(t18>>64);
  const auto t21 = B(x.n[2])*B(y.n[1]);
  const auto t22 = uint64_t(t21);
  const auto t23 = uint64_t(t21>>64);
  const auto t24 = B(x.n[2])*B(int64_t(y.n[2]));
  const auto t25 = uint64_t(t24);
  const auto t26 = int64_t(t24>>64);
  const auto t27 = B(x.n[3])*B(y.n[0]);
  const auto t28 = uint64_t(t27);
  const auto t29 = uint64_t(t27>>64);
  const auto t30 = B(x.n[3])*B(y.n[1]);
  const auto t31 = uint64_t(t30);
  const auto t32 = uint64_t(t30>>64);
  const auto t33 = B(x.n[3])*B(int64_t(y.n[2]));
  const auto t34 = uint64_t(t33);
  const auto t35 = int64_t(t33>>64);
  const auto t36 = B(x.n[4])*B(y.n[0]);
  const auto t37 = uint64_t(t36);
  const auto t38 = uint64_t(t36>>64);
  const auto t39 = B(x.n[4])*B(y.n[1]);
  const auto t40 = uint64_t(t39);
  const auto t41 = uint64_t(t39>>64);
  const auto t42 = B(x.n[4])*B(int64_t(y.n[2]));
  const auto t43 = uint64_t(t42);
  const auto t44 = int64_t(t42>>64);
  const auto t45 = B(int64_t(x.n[5]))*B(y.n[0]);
  const auto t46 = uint64_t(t45);
  const auto t47 = int64_t(t45>>64);
  const auto t48 = B(int64_t(x.n[5]))*B(y.n[1]);
  const auto t49 = uint64_t(t48);
  const auto t50 = int64_t(t48>>64);
  const auto t51 = B(int64_t(x.n[5]))*B(int64_t(y.n[2]));
  const auto t52 = uint64_t(t51);
  const auto t53 = uint64_t(t51>>64);
  r.n[0] = uint64_t(t1);
  const auto t54 = B(t2)+B(t4)+B(t10);
  r.n[1] = uint64_t(t54);
  const auto t55 = int64_t(t54>>64);
  const auto t56 = B(t5)+B(t7)+B(t11)+B(t13)+B(t19)+B(t55);
  r.n[2] = uint64_t(t56);
  const auto t57 = int64_t(t56>>64);
  const auto t58 = B(t8)+B(t14)+B(t16)+B(t20)+B(t22)+B(t28)+B(t57);
  r.n[3] = uint64_t(t58);
  const auto t59 = int64_t(t58>>64);
  const auto t60 = B(t17)+B(t23)+B(t25)+B(t29)+B(t31)+B(t37)+B(t59);
  r.n[4] = uint64_t(t60);
  const auto t61 = int64_t(t60>>64);
  const auto t62 = B(t26)+B(t32)+B(t34)+B(t38)+B(t40)+B(t46)+B(t61);
  r.n[5] = uint64_t(t62);
  const auto t63 = int64_t(t62>>64);
  const auto t64 = B(t35)+B(t41)+B(t43)+B(t47)+B(t49)+B(t63);
  r.n[6] = uint64_t(t64);
  const auto t65 = int64_t(t64>>64);
  const auto t66 = B(t44)+B(t50)+B(t52)+B(t65);
  r.n[7] = uint64_t(t66);
  const auto t67 = int64_t(t66>>64);
  const auto t68 = B(t53)+B(t67);
  r.n[8] = uint64_t(t68);
  return r;
}
GEODE_PURE static inline Exact<12> operator*(const Exact<6> x, const Exact<6> y) {
  Exact<12> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(y.n[1]);
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  const auto t6 = B(x.n[0])*B(y.n[2]);
  const auto t7 = uint64_t(t6);
  const auto t8 = uint64_t(t6>>64);
  const auto t9 = B(x.n[0])*B(y.n[3]);
  const auto t10 = uint64_t(t9);
  const auto t11 = uint64_t(t9>>64);
  const auto t12 = B(x.n[0])*B(y.n[4]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[0])*B(int64_t(y.n[5]));
  const auto t16 = uint64_t(t15);
  const auto t17 = int64_t(t15>>64);
  const auto t18 = B(x.n[1])*B(y.n[0]);
  const auto t19 = uint64_t(t18);
  const auto t20 = uint64_t(t18>>64);
  const auto t21 = B(x.n[1])*B(y.n[1]);
  const auto t22 = uint64_t(t21);
  const auto t23 = uint64_t(t21>>64);
  const auto t24 = B(x.n[1])*B(y.n[2]);
  const auto t25 = uint64_t(t24);
  const auto t26 = uint64_t(t24>>64);
  const auto t27 = B(x.n[1])*B(y.n[3]);
  const auto t28 = uint64_t(t27);
  const auto t29 = uint64_t(t27>>64);
  const auto t30 = B(x.n[1])*B(y.n[4]);
  const auto t31 = uint64_t(t30);
  const auto t32 = uint64_t(t30>>64);
  const auto t33 = B(x.n[1])*B(int64_t(y.n[5]));
  const auto t34 = uint64_t(t33);
  const auto t35 = int64_t(t33>>64);
  const auto t36 = B(x.n[2])*B(y.n[0]);
  const auto t37 = uint64_t(t36);
  const auto t38 = uint64_t(t36>>64);
  const auto t39 = B(x.n[2])*B(y.n[1]);
  const auto t40 = uint64_t(t39);
  const auto t41 = uint64_t(t39>>64);
  const auto t42 = B(x.n[2])*B(y.n[2]);
  const auto t43 = uint64_t(t42);
  const auto t44 = uint64_t(t42>>64);
  const auto t45 = B(x.n[2])*B(y.n[3]);
  const auto t46 = uint64_t(t45);
  const auto t47 = uint64_t(t45>>64);
  const auto t48 = B(x.n[2])*B(y.n[4]);
  const auto t49 = uint64_t(t48);
  const auto t50 = uint64_t(t48>>64);
  const auto t51 = B(x.n[2])*B(int64_t(y.n[5]));
  const auto t52 = uint64_t(t51);
  const auto t53 = int64_t(t51>>64);
  const auto t54 = B(x.n[3])*B(y.n[0]);
  const auto t55 = uint64_t(t54);
  const auto t56 = uint64_t(t54>>64);
  const auto t57 = B(x.n[3])*B(y.n[1]);
  const auto t58 = uint64_t(t57);
  const auto t59 = uint64_t(t57>>64);
  const auto t60 = B(x.n[3])*B(y.n[2]);
  const auto t61 = uint64_t(t60);
  const auto t62 = uint64_t(t60>>64);
  const auto t63 = B(x.n[3])*B(y.n[3]);
  const auto t64 = uint64_t(t63);
  const auto t65 = uint64_t(t63>>64);
  const auto t66 = B(x.n[3])*B(y.n[4]);
  const auto t67 = uint64_t(t66);
  const auto t68 = uint64_t(t66>>64);
  const auto t69 = B(x.n[3])*B(int64_t(y.n[5]));
  const auto t70 = uint64_t(t69);
  const auto t71 = int64_t(t69>>64);
  const auto t72 = B(x.n[4])*B(y.n[0]);
  const auto t73 = uint64_t(t72);
  const auto t74 = uint64_t(t72>>64);
  const auto t75 = B(x.n[4])*B(y.n[1]);
  const auto t76 = uint64_t(t75);
  const auto t77 = uint64_t(t75>>64);
  const auto t78 = B(x.n[4])*B(y.n[2]);
  const auto t79 = uint64_t(t78);
  const auto t80 = uint64_t(t78>>64);
  const auto t81 = B(x.n[4])*B(y.n[3]);
  const auto t82 = uint64_t(t81);
  const auto t83 = uint64_t(t81>>64);
  const auto t84 = B(x.n[4])*B(y.n[4]);
  const auto t85 = uint64_t(t84);
  const auto t86 = uint64_t(t84>>64);
  const auto t87 = B(x.n[4])*B(int64_t(y.n[5]));
  const auto t88 = uint64_t(t87);
  const auto t89 = int64_t(t87>>64);
  const auto t90 = B(int64_t(x.n[5]))*B(y.n[0]);
  const auto t91 = uint64_t(t90);
  const auto t92 = int64_t(t90>>64);
  const auto t93 = B(int64_t(x.n[5]))*B(y.n[1]);
  const auto t94 = uint64_t(t93);
  const auto t95 = int64_t(t93>>64);
  const auto t96 = B(int64_t(x.n[5]))*B(y.n[2]);
  const auto t97 = uint64_t(t96);
  const auto t98 = int64_t(t96>>64);
  const auto t99 = B(int64_t(x.n[5]))*B(y.n[3]);
  const auto t100 = uint64_t(t99);
  const auto t101 = int64_t(t99>>64);
  const auto t102 = B(int64_t(x.n[5]))*B(y.n[4]);
  const auto t103 = uint64_t(t102);
  const auto t104 = int64_t(t102>>64);
  const auto t105 = B(int64_t(x.n[5]))*B(int64_t(y.n[5]));
  const auto t106 = uint64_t(t105);
  const auto t107 = uint64_t(t105>>64);
  r.n[0] = uint64_t(t1);
  const auto t108 = B(t2)+B(t4)+B(t19);
  r.n[1] = uint64_t(t108);
  const auto t109 = int64_t(t108>>64);
  const auto t110 = B(t5)+B(t7)+B(t20)+B(t22)+B(t37)+B(t109);
  r.n[2] = uint64_t(t110);
  const auto t111 = int64_t(t110>>64);
  const auto t112 = B(t8)+B(t10)+B(t23)+B(t25)+B(t38)+B(t40)+B(t55)+B(t111);
  r.n[3] = uint64_t(t112);
  const auto t113 = int64_t(t112>>64);
  const auto t114 = B(t11)+B(t13)+B(t26)+B(t28)+B(t41)+B(t43)+B(t56)+B(t58)+B(t73)+B(t113);
  r.n[4] = uint64_t(t114);
  const auto t115 = int64_t(t114>>64);
  const auto t116 = B(t14)+B(t16)+B(t29)+B(t31)+B(t44)+B(t46)+B(t59)+B(t61)+B(t74)+B(t76)+B(t91)+B(t115);
  r.n[5] = uint64_t(t116);
  const auto t117 = int64_t(t116>>64);
  const auto t118 = B(t17)+B(t32)+B(t34)+B(t47)+B(t49)+B(t62)+B(t64)+B(t77)+B(t79)+B(t92)+B(t94)+B(t117);
  r.n[6] = uint64_t(t118);
  const auto t119 = int64_t(t118>>64);
  const auto t120 = B(t35)+B(t50)+B(t52)+B(t65)+B(t67)+B(t80)+B(t82)+B(t95)+B(t97)+B(t119);
  r.n[7] = uint64_t(t120);
  const auto t121 = int64_t(t120>>64);
  const auto t122 = B(t53)+B(t68)+B(t70)+B(t83)+B(t85)+B(t98)+B(t100)+B(t121);
  r.n[8] = uint64_t(t122);
  const auto t123 = int64_t(t122>>64);
  const auto t124 = B(t71)+B(t86)+B(t88)+B(t101)+B(t103)+B(t123);
  r.n[9] = uint64_t(t124);
  const auto t125 = int64_t(t124>>64);
  const auto t126 = B(t89)+B(t104)+B(t106)+B(t125);
  r.n[10] = uint64_t(t126);
  const auto t127 = int64_t(t126>>64);
  const auto t128 = B(t107)+B(t127);
  r.n[11] = uint64_t(t128);
  return r;
}
GEODE_PURE static inline Exact<12> sqr(const Exact<6> x) {
  Exact<12> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(x.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(x.n[1]);
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  const auto t6 = B(x.n[0])*B(x.n[2]);
  const auto t7 = uint64_t(t6);
  const auto t8 = uint64_t(t6>>64);
  const auto t9 = B(x.n[0])*B(x.n[3]);
  const auto t10 = uint64_t(t9);
  const auto t11 = uint64_t(t9>>64);
  const auto t12 = B(x.n[0])*B(x.n[4]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[0])*B(int64_t(x.n[5]));
  const auto t16 = uint64_t(t15);
  const auto t17 = int64_t(t15>>64);
  const auto t18 = B(x.n[1])*B(x.n[0]);
  const auto t19 = uint64_t(t18);
  const auto t20 = uint64_t(t18>>64);
  const auto t21 = B(x.n[1])*B(x.n[1]);
  const auto t22 = uint64_t(t21);
  const auto t23 = uint64_t(t21>>64);
  const auto t24 = B(x.n[1])*B(x.n[2]);
  const auto t25 = uint64_t(t24);
  const auto t26 = uint64_t(t24>>64);
  const auto t27 = B(x.n[1])*B(x.n[3]);
  const auto t28 = uint64_t(t27);
  const auto t29 = uint64_t(t27>>64);
  const auto t30 = B(x.n[1])*B(x.n[4]);
  const auto t31 = uint64_t(t30);
  const auto t32 = uint64_t(t30>>64);
  const auto t33 = B(x.n[1])*B(int64_t(x.n[5]));
  const auto t34 = uint64_t(t33);
  const auto t35 = int64_t(t33>>64);
  const auto t36 = B(x.n[2])*B(x.n[0]);
  const auto t37 = uint64_t(t36);
  const auto t38 = uint64_t(t36>>64);
  const auto t39 = B(x.n[2])*B(x.n[1]);
  const auto t40 = uint64_t(t39);
  const auto t41 = uint64_t(t39>>64);
  const auto t42 = B(x.n[2])*B(x.n[2]);
  const auto t43 = uint64_t(t42);
  const auto t44 = uint64_t(t42>>64);
  const auto t45 = B(x.n[2])*B(x.n[3]);
  const auto t46 = uint64_t(t45);
  const auto t47 = uint64_t(t45>>64);
  const auto t48 = B(x.n[2])*B(x.n[4]);
  const auto t49 = uint64_t(t48);
  const auto t50 = uint64_t(t48>>64);
  const auto t51 = B(x.n[2])*B(int64_t(x.n[5]));
  const auto t52 = uint64_t(t51);
  const auto t53 = int64_t(t51>>64);
  const auto t54 = B(x.n[3])*B(x.n[0]);
  const auto t55 = uint64_t(t54);
  const auto t56 = uint64_t(t54>>64);
  const auto t57 = B(x.n[3])*B(x.n[1]);
  const auto t58 = uint64_t(t57);
  const auto t59 = uint64_t(t57>>64);
  const auto t60 = B(x.n[3])*B(x.n[2]);
  const auto t61 = uint64_t(t60);
  const auto t62 = uint64_t(t60>>64);
  const auto t63 = B(x.n[3])*B(x.n[3]);
  const auto t64 = uint64_t(t63);
  const auto t65 = uint64_t(t63>>64);
  const auto t66 = B(x.n[3])*B(x.n[4]);
  const auto t67 = uint64_t(t66);
  const auto t68 = uint64_t(t66>>64);
  const auto t69 = B(x.n[3])*B(int64_t(x.n[5]));
  const auto t70 = uint64_t(t69);
  const auto t71 = int64_t(t69>>64);
  const auto t72 = B(x.n[4])*B(x.n[0]);
  const auto t73 = uint64_t(t72);
  const auto t74 = uint64_t(t72>>64);
  const auto t75 = B(x.n[4])*B(x.n[1]);
  const auto t76 = uint64_t(t75);
  const auto t77 = uint64_t(t75>>64);
  const auto t78 = B(x.n[4])*B(x.n[2]);
  const auto t79 = uint64_t(t78);
  const auto t80 = uint64_t(t78>>64);
  const auto t81 = B(x.n[4])*B(x.n[3]);
  const auto t82 = uint64_t(t81);
  const auto t83 = uint64_t(t81>>64);
  const auto t84 = B(x.n[4])*B(x.n[4]);
  const auto t85 = uint64_t(t84);
  const auto t86 = uint64_t(t84>>64);
  const auto t87 = B(x.n[4])*B(int64_t(x.n[5]));
  const auto t88 = uint64_t(t87);
  const auto t89 = int64_t(t87>>64);
  const auto t90 = B(int64_t(x.n[5]))*B(x.n[0]);
  const auto t91 = uint64_t(t90);
  const auto t92 = int64_t(t90>>64);
  const auto t93 = B(int64_t(x.n[5]))*B(x.n[1]);
  const auto t94 = uint64_t(t93);
  const auto t95 = int64_t(t93>>64);
  const auto t96 = B(int64_t(x.n[5]))*B(x.n[2]);
  const auto t97 = uint64_t(t96);
  const auto t98 = int64_t(t96>>64);
  const auto t99 = B(int64_t(x.n[5]))*B(x.n[3]);
  const auto t100 = uint64_t(t99);
  const auto t101 = int64_t(t99>>64);
  const auto t102 = B(int64_t(x.n[5]))*B(x.n[4]);
  const auto t103 = uint64_t(t102);
  const auto t104 = int64_t(t102>>64);
  const auto t105 = B(int64_t(x.n[5]))*B(int64_t(x.n[5]));
  const auto t106 = uint64_t(t105);
  const auto t107 = uint64_t(t105>>64);
  r.n[0] = uint64_t(t1);
  const auto t108 = B(t2)+B(t4)+B(t19);
  r.n[1] = uint64_t(t108);
  const auto t109 = int64_t(t108>>64);
  const auto t110 = B(t5)+B(t7)+B(t20)+B(t22)+B(t37)+B(t109);
  r.n[2] = uint64_t(t110);
  const auto t111 = int64_t(t110>>64);
  const auto t112 = B(t8)+B(t10)+B(t23)+B(t25)+B(t38)+B(t40)+B(t55)+B(t111);
  r.n[3] = uint64_t(t112);
  const auto t113 = int64_t(t112>>64);
  const auto t114 = B(t11)+B(t13)+B(t26)+B(t28)+B(t41)+B(t43)+B(t56)+B(t58)+B(t73)+B(t113);
  r.n[4] = uint64_t(t114);
  const auto t115 = int64_t(t114>>64);
  const auto t116 = B(t14)+B(t16)+B(t29)+B(t31)+B(t44)+B(t46)+B(t59)+B(t61)+B(t74)+B(t76)+B(t91)+B(t115);
  r.n[5] = uint64_t(t116);
  const auto t117 = int64_t(t116>>64);
  const auto t118 = B(t17)+B(t32)+B(t34)+B(t47)+B(t49)+B(t62)+B(t64)+B(t77)+B(t79)+B(t92)+B(t94)+B(t117);
  r.n[6] = uint64_t(t118);
  const auto t119 = int64_t(t118>>64);
  const auto t120 = B(t35)+B(t50)+B(t52)+B(t65)+B(t67)+B(t80)+B(t82)+B(t95)+B(t97)+B(t119);
  r.n[7] = uint64_t(t120);
  const auto t121 = int64_t(t120>>64);
  const auto t122 = B(t53)+B(t68)+B(t70)+B(t83)+B(t85)+B(t98)+B(t100)+B(t121);
  r.n[8] = uint64_t(t122);
  const auto t123 = int64_t(t122>>64);
  const auto t124 = B(t71)+B(t86)+B(t88)+B(t101)+B(t103)+B(t123);
  r.n[9] = uint64_t(t124);
  const auto t125 = int64_t(t124>>64);
  const auto t126 = B(t89)+B(t104)+B(t106)+B(t125);
  r.n[10] = uint64_t(t126);
  const auto t127 = int64_t(t126>>64);
  const auto t128 = B(t107)+B(t127);
  r.n[11] = uint64_t(t128);
  return r;
}
GEODE_PURE static inline Exact<8> operator*(const Exact<7> x, const Exact<1> y) {
  Exact<8> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(int64_t(y.n[0]));
  const auto t1 = uint64_t(t0);
  const auto t2 = int64_t(t0>>64);
  const auto t3 = B(x.n[1])*B(int64_t(y.n[0]));
  const auto t4 = uint64_t(t3);
  const auto t5 = int64_t(t3>>64);
  const auto t6 = B(x.n[2])*B(int64_t(y.n[0]));
  const auto t7 = uint64_t(t6);
  const auto t8 = int64_t(t6>>64);
  const auto t9 = B(x.n[3])*B(int64_t(y.n[0]));
  const auto t10 = uint64_t(t9);
  const auto t11 = int64_t(t9>>64);
  const auto t12 = B(x.n[4])*B(int64_t(y.n[0]));
  const auto t13 = uint64_t(t12);
  const auto t14 = int64_t(t12>>64);
  const auto t15 = B(x.n[5])*B(int64_t(y.n[0]));
  const auto t16 = uint64_t(t15);
  const auto t17 = int64_t(t15>>64);
  const auto t18 = B(int64_t(x.n[6]))*B(int64_t(y.n[0]));
  const auto t19 = uint64_t(t18);
  const auto t20 = uint64_t(t18>>64);
  r.n[0] = uint64_t(t1);
  const auto t21 = B(t2)+B(t4);
  r.n[1] = uint64_t(t21);
  const auto t22 = int64_t(t21>>64);
  const auto t23 = B(t5)+B(t7)+B(t22);
  r.n[2] = uint64_t(t23);
  const auto t24 = int64_t(t23>>64);
  const auto t25 = B(t8)+B(t10)+B(t24);
  r.n[3] = uint64_t(t25);
  const auto t26 = int64_t(t25>>64);
  const auto t27 = B(t11)+B(t13)+B(t26);
  r.n[4] = uint64_t(t27);
  const auto t28 = int64_t(t27>>64);
  const auto t29 = B(t14)+B(t16)+B(t28);
  r.n[5] = uint64_t(t29);
  const auto t30 = int64_t(t29>>64);
  const auto t31 = B(t17)+B(t19)+B(t30);
  r.n[6] = uint64_t(t31);
  const auto t32 = int64_t(t31>>64);
  const auto t33 = B(t20)+B(t32);
  r.n[7] = uint64_t(t33);
  return r;
}
GEODE_PURE static inline Exact<9> operator*(const Exact<7> x, const Exact<2> y) {
  Exact<9> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(int64_t(y.n[1]));
  const auto t4 = uint64_t(t3);
  const auto t5 = int64_t(t3>>64);
  const auto t6 = B(x.n[1])*B(y.n[0]);
  const auto t7 = uint64_t(t6);
  const auto t8 = uint64_t(t6>>64);
  const auto t9 = B(x.n[1])*B(int64_t(y.n[1]));
  const auto t10 = uint64_t(t9);
  const auto t11 = int64_t(t9>>64);
  const auto t12 = B(x.n[2])*B(y.n[0]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[2])*B(int64_t(y.n[1]));
  const auto t16 = uint64_t(t15);
  const auto t17 = int64_t(t15>>64);
  const auto t18 = B(x.n[3])*B(y.n[0]);
  const auto t19 = uint64_t(t18);
  const auto t20 = uint64_t(t18>>64);
  const auto t21 = B(x.n[3])*B(int64_t(y.n[1]));
  const auto t22 = uint64_t(t21);
  const auto t23 = int64_t(t21>>64);
  const auto t24 = B(x.n[4])*B(y.n[0]);
  const auto t25 = uint64_t(t24);
  const auto t26 = uint64_t(t24>>64);
  const auto t27 = B(x.n[4])*B(int64_t(y.n[1]));
  const auto t28 = uint64_t(t27);
  const auto t29 = int64_t(t27>>64);
  const auto t30 = B(x.n[5])*B(y.n[0]);
  const auto t31 = uint64_t(t30);
  const auto t32 = uint64_t(t30>>64);
  const auto t33 = B(x.n[5])*B(int64_t(y.n[1]));
  const auto t34 = uint64_t(t33);
  const auto t35 = int64_t(t33>>64);
  const auto t36 = B(int64_t(x.n[6]))*B(y.n[0]);
  const auto t37 = uint64_t(t36);
  const auto t38 = int64_t(t36>>64);
  const auto t39 = B(int64_t(x.n[6]))*B(int64_t(y.n[1]));
  const auto t40 = uint64_t(t39);
  const auto t41 = uint64_t(t39>>64);
  r.n[0] = uint64_t(t1);
  const auto t42 = B(t2)+B(t4)+B(t7);
  r.n[1] = uint64_t(t42);
  const auto t43 = int64_t(t42>>64);
  const auto t44 = B(t5)+B(t8)+B(t10)+B(t13)+B(t43);
  r.n[2] = uint64_t(t44);
  const auto t45 = int64_t(t44>>64);
  const auto t46 = B(t11)+B(t14)+B(t16)+B(t19)+B(t45);
  r.n[3] = uint64_t(t46);
  const auto t47 = int64_t(t46>>64);
  const auto t48 = B(t17)+B(t20)+B(t22)+B(t25)+B(t47);
  r.n[4] = uint64_t(t48);
  const auto t49 = int64_t(t48>>64);
  const auto t50 = B(t23)+B(t26)+B(t28)+B(t31)+B(t49);
  r.n[5] = uint64_t(t50);
  const auto t51 = int64_t(t50>>64);
  const auto t52 = B(t29)+B(t32)+B(t34)+B(t37)+B(t51);
  r.n[6] = uint64_t(t52);
  const auto t53 = int64_t(t52>>64);
  const auto t54 = B(t35)+B(t38)+B(t40)+B(t53);
  r.n[7] = uint64_t(t54);
  const auto t55 = int64_t(t54>>64);
  const auto t56 = B(t41)+B(t55);
  r.n[8] = uint64_t(t56);
  return r;
}
GEODE_PURE static inline Exact<12> operator*(const Exact<7> x, const Exact<5> y) {
  Exact<12> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(y.n[1]);
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  const auto t6 = B(x.n[0])*B(y.n[2]);
  const auto t7 = uint64_t(t6);
  const auto t8 = uint64_t(t6>>64);
  const auto t9 = B(x.n[0])*B(y.n[3]);
  const auto t10 = uint64_t(t9);
  const auto t11 = uint64_t(t9>>64);
  const auto t12 = B(x.n[0])*B(int64_t(y.n[4]));
  const auto t13 = uint64_t(t12);
  const auto t14 = int64_t(t12>>64);
  const auto t15 = B(x.n[1])*B(y.n[0]);
  const auto t16 = uint64_t(t15);
  const auto t17 = uint64_t(t15>>64);
  const auto t18 = B(x.n[1])*B(y.n[1]);
  const auto t19 = uint64_t(t18);
  const auto t20 = uint64_t(t18>>64);
  const auto t21 = B(x.n[1])*B(y.n[2]);
  const auto t22 = uint64_t(t21);
  const auto t23 = uint64_t(t21>>64);
  const auto t24 = B(x.n[1])*B(y.n[3]);
  const auto t25 = uint64_t(t24);
  const auto t26 = uint64_t(t24>>64);
  const auto t27 = B(x.n[1])*B(int64_t(y.n[4]));
  const auto t28 = uint64_t(t27);
  const auto t29 = int64_t(t27>>64);
  const auto t30 = B(x.n[2])*B(y.n[0]);
  const auto t31 = uint64_t(t30);
  const auto t32 = uint64_t(t30>>64);
  const auto t33 = B(x.n[2])*B(y.n[1]);
  const auto t34 = uint64_t(t33);
  const auto t35 = uint64_t(t33>>64);
  const auto t36 = B(x.n[2])*B(y.n[2]);
  const auto t37 = uint64_t(t36);
  const auto t38 = uint64_t(t36>>64);
  const auto t39 = B(x.n[2])*B(y.n[3]);
  const auto t40 = uint64_t(t39);
  const auto t41 = uint64_t(t39>>64);
  const auto t42 = B(x.n[2])*B(int64_t(y.n[4]));
  const auto t43 = uint64_t(t42);
  const auto t44 = int64_t(t42>>64);
  const auto t45 = B(x.n[3])*B(y.n[0]);
  const auto t46 = uint64_t(t45);
  const auto t47 = uint64_t(t45>>64);
  const auto t48 = B(x.n[3])*B(y.n[1]);
  const auto t49 = uint64_t(t48);
  const auto t50 = uint64_t(t48>>64);
  const auto t51 = B(x.n[3])*B(y.n[2]);
  const auto t52 = uint64_t(t51);
  const auto t53 = uint64_t(t51>>64);
  const auto t54 = B(x.n[3])*B(y.n[3]);
  const auto t55 = uint64_t(t54);
  const auto t56 = uint64_t(t54>>64);
  const auto t57 = B(x.n[3])*B(int64_t(y.n[4]));
  const auto t58 = uint64_t(t57);
  const auto t59 = int64_t(t57>>64);
  const auto t60 = B(x.n[4])*B(y.n[0]);
  const auto t61 = uint64_t(t60);
  const auto t62 = uint64_t(t60>>64);
  const auto t63 = B(x.n[4])*B(y.n[1]);
  const auto t64 = uint64_t(t63);
  const auto t65 = uint64_t(t63>>64);
  const auto t66 = B(x.n[4])*B(y.n[2]);
  const auto t67 = uint64_t(t66);
  const auto t68 = uint64_t(t66>>64);
  const auto t69 = B(x.n[4])*B(y.n[3]);
  const auto t70 = uint64_t(t69);
  const auto t71 = uint64_t(t69>>64);
  const auto t72 = B(x.n[4])*B(int64_t(y.n[4]));
  const auto t73 = uint64_t(t72);
  const auto t74 = int64_t(t72>>64);
  const auto t75 = B(x.n[5])*B(y.n[0]);
  const auto t76 = uint64_t(t75);
  const auto t77 = uint64_t(t75>>64);
  const auto t78 = B(x.n[5])*B(y.n[1]);
  const auto t79 = uint64_t(t78);
  const auto t80 = uint64_t(t78>>64);
  const auto t81 = B(x.n[5])*B(y.n[2]);
  const auto t82 = uint64_t(t81);
  const auto t83 = uint64_t(t81>>64);
  const auto t84 = B(x.n[5])*B(y.n[3]);
  const auto t85 = uint64_t(t84);
  const auto t86 = uint64_t(t84>>64);
  const auto t87 = B(x.n[5])*B(int64_t(y.n[4]));
  const auto t88 = uint64_t(t87);
  const auto t89 = int64_t(t87>>64);
  const auto t90 = B(int64_t(x.n[6]))*B(y.n[0]);
  const auto t91 = uint64_t(t90);
  const auto t92 = int64_t(t90>>64);
  const auto t93 = B(int64_t(x.n[6]))*B(y.n[1]);
  const auto t94 = uint64_t(t93);
  const auto t95 = int64_t(t93>>64);
  const auto t96 = B(int64_t(x.n[6]))*B(y.n[2]);
  const auto t97 = uint64_t(t96);
  const auto t98 = int64_t(t96>>64);
  const auto t99 = B(int64_t(x.n[6]))*B(y.n[3]);
  const auto t100 = uint64_t(t99);
  const auto t101 = int64_t(t99>>64);
  const auto t102 = B(int64_t(x.n[6]))*B(int64_t(y.n[4]));
  const auto t103 = uint64_t(t102);
  const auto t104 = uint64_t(t102>>64);
  r.n[0] = uint64_t(t1);
  const auto t105 = B(t2)+B(t4)+B(t16);
  r.n[1] = uint64_t(t105);
  const auto t106 = int64_t(t105>>64);
  const auto t107 = B(t5)+B(t7)+B(t17)+B(t19)+B(t31)+B(t106);
  r.n[2] = uint64_t(t107);
  const auto t108 = int64_t(t107>>64);
  const auto t109 = B(t8)+B(t10)+B(t20)+B(t22)+B(t32)+B(t34)+B(t46)+B(t108);
  r.n[3] = uint64_t(t109);
  const auto t110 = int64_t(t109>>64);
  const auto t111 = B(t11)+B(t13)+B(t23)+B(t25)+B(t35)+B(t37)+B(t47)+B(t49)+B(t61)+B(t110);
  r.n[4] = uint64_t(t111);
  const auto t112 = int64_t(t111>>64);
  const auto t113 = B(t14)+B(t26)+B(t28)+B(t38)+B(t40)+B(t50)+B(t52)+B(t62)+B(t64)+B(t76)+B(t112);
  r.n[5] = uint64_t(t113);
  const auto t114 = int64_t(t113>>64);
  const auto t115 = B(t29)+B(t41)+B(t43)+B(t53)+B(t55)+B(t65)+B(t67)+B(t77)+B(t79)+B(t91)+B(t114);
  r.n[6] = uint64_t(t115);
  const auto t116 = int64_t(t115>>64);
  const auto t117 = B(t44)+B(t56)+B(t58)+B(t68)+B(t70)+B(t80)+B(t82)+B(t92)+B(t94)+B(t116);
  r.n[7] = uint64_t(t117);
  const auto t118 = int64_t(t117>>64);
  const auto t119 = B(t59)+B(t71)+B(t73)+B(t83)+B(t85)+B(t95)+B(t97)+B(t118);
  r.n[8] = uint64_t(t119);
  const auto t120 = int64_t(t119>>64);
  const auto t121 = B(t74)+B(t86)+B(t88)+B(t98)+B(t100)+B(t120);
  r.n[9] = uint64_t(t121);
  const auto t122 = int64_t(t121>>64);
  const auto t123 = B(t89)+B(t101)+B(t103)+B(t122);
  r.n[10] = uint64_t(t123);
  const auto t124 = int64_t(t123>>64);
  const auto t125 = B(t104)+B(t124);
  r.n[11] = uint64_t(t125);
  return r;
}
GEODE_PURE static inline Exact<13> operator*(const Exact<7> x, const Exact<6> y) {
  Exact<13> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(y.n[1]);
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  const auto t6 = B(x.n[0])*B(y.n[2]);
  const auto t7 = uint64_t(t6);
  const auto t8 = uint64_t(t6>>64);
  const auto t9 = B(x.n[0])*B(y.n[3]);
  const auto t10 = uint64_t(t9);
  const auto t11 = uint64_t(t9>>64);
  const auto t12 = B(x.n[0])*B(y.n[4]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[0])*B(int64_t(y.n[5]));
  const auto t16 = uint64_t(t15);
  const auto t17 = int64_t(t15>>64);
  const auto t18 = B(x.n[1])*B(y.n[0]);
  const auto t19 = uint64_t(t18);
  const auto t20 = uint64_t(t18>>64);
  const auto t21 = B(x.n[1])*B(y.n[1]);
  const auto t22 = uint64_t(t21);
  const auto t23 = uint64_t(t21>>64);
  const auto t24 = B(x.n[1])*B(y.n[2]);
  const auto t25 = uint64_t(t24);
  const auto t26 = uint64_t(t24>>64);
  const auto t27 = B(x.n[1])*B(y.n[3]);
  const auto t28 = uint64_t(t27);
  const auto t29 = uint64_t(t27>>64);
  const auto t30 = B(x.n[1])*B(y.n[4]);
  const auto t31 = uint64_t(t30);
  const auto t32 = uint64_t(t30>>64);
  const auto t33 = B(x.n[1])*B(int64_t(y.n[5]));
  const auto t34 = uint64_t(t33);
  const auto t35 = int64_t(t33>>64);
  const auto t36 = B(x.n[2])*B(y.n[0]);
  const auto t37 = uint64_t(t36);
  const auto t38 = uint64_t(t36>>64);
  const auto t39 = B(x.n[2])*B(y.n[1]);
  const auto t40 = uint64_t(t39);
  const auto t41 = uint64_t(t39>>64);
  const auto t42 = B(x.n[2])*B(y.n[2]);
  const auto t43 = uint64_t(t42);
  const auto t44 = uint64_t(t42>>64);
  const auto t45 = B(x.n[2])*B(y.n[3]);
  const auto t46 = uint64_t(t45);
  const auto t47 = uint64_t(t45>>64);
  const auto t48 = B(x.n[2])*B(y.n[4]);
  const auto t49 = uint64_t(t48);
  const auto t50 = uint64_t(t48>>64);
  const auto t51 = B(x.n[2])*B(int64_t(y.n[5]));
  const auto t52 = uint64_t(t51);
  const auto t53 = int64_t(t51>>64);
  const auto t54 = B(x.n[3])*B(y.n[0]);
  const auto t55 = uint64_t(t54);
  const auto t56 = uint64_t(t54>>64);
  const auto t57 = B(x.n[3])*B(y.n[1]);
  const auto t58 = uint64_t(t57);
  const auto t59 = uint64_t(t57>>64);
  const auto t60 = B(x.n[3])*B(y.n[2]);
  const auto t61 = uint64_t(t60);
  const auto t62 = uint64_t(t60>>64);
  const auto t63 = B(x.n[3])*B(y.n[3]);
  const auto t64 = uint64_t(t63);
  const auto t65 = uint64_t(t63>>64);
  const auto t66 = B(x.n[3])*B(y.n[4]);
  const auto t67 = uint64_t(t66);
  const auto t68 = uint64_t(t66>>64);
  const auto t69 = B(x.n[3])*B(int64_t(y.n[5]));
  const auto t70 = uint64_t(t69);
  const auto t71 = int64_t(t69>>64);
  const auto t72 = B(x.n[4])*B(y.n[0]);
  const auto t73 = uint64_t(t72);
  const auto t74 = uint64_t(t72>>64);
  const auto t75 = B(x.n[4])*B(y.n[1]);
  const auto t76 = uint64_t(t75);
  const auto t77 = uint64_t(t75>>64);
  const auto t78 = B(x.n[4])*B(y.n[2]);
  const auto t79 = uint64_t(t78);
  const auto t80 = uint64_t(t78>>64);
  const auto t81 = B(x.n[4])*B(y.n[3]);
  const auto t82 = uint64_t(t81);
  const auto t83 = uint64_t(t81>>64);
  const auto t84 = B(x.n[4])*B(y.n[4]);
  const auto t85 = uint64_t(t84);
  const auto t86 = uint64_t(t84>>64);
  const auto t87 = B(x.n[4])*B(int64_t(y.n[5]));
  const auto t88 = uint64_t(t87);
  const auto t89 = int64_t(t87>>64);
  const auto t90 = B(x.n[5])*B(y.n[0]);
  const auto t91 = uint64_t(t90);
  const auto t92 = uint64_t(t90>>64);
  const auto t93 = B(x.n[5])*B(y.n[1]);
  const auto t94 = uint64_t(t93);
  const auto t95 = uint64_t(t93>>64);
  const auto t96 = B(x.n[5])*B(y.n[2]);
  const auto t97 = uint64_t(t96);
  const auto t98 = uint64_t(t96>>64);
  const auto t99 = B(x.n[5])*B(y.n[3]);
  const auto t100 = uint64_t(t99);
  const auto t101 = uint64_t(t99>>64);
  const auto t102 = B(x.n[5])*B(y.n[4]);
  const auto t103 = uint64_t(t102);
  const auto t104 = uint64_t(t102>>64);
  const auto t105 = B(x.n[5])*B(int64_t(y.n[5]));
  const auto t106 = uint64_t(t105);
  const auto t107 = int64_t(t105>>64);
  const auto t108 = B(int64_t(x.n[6]))*B(y.n[0]);
  const auto t109 = uint64_t(t108);
  const auto t110 = int64_t(t108>>64);
  const auto t111 = B(int64_t(x.n[6]))*B(y.n[1]);
  const auto t112 = uint64_t(t111);
  const auto t113 = int64_t(t111>>64);
  const auto t114 = B(int64_t(x.n[6]))*B(y.n[2]);
  const auto t115 = uint64_t(t114);
  const auto t116 = int64_t(t114>>64);
  const auto t117 = B(int64_t(x.n[6]))*B(y.n[3]);
  const auto t118 = uint64_t(t117);
  const auto t119 = int64_t(t117>>64);
  const auto t120 = B(int64_t(x.n[6]))*B(y.n[4]);
  const auto t121 = uint64_t(t120);
  const auto t122 = int64_t(t120>>64);
  const auto t123 = B(int64_t(x.n[6]))*B(int64_t(y.n[5]));
  const auto t124 = uint64_t(t123);
  const auto t125 = uint64_t(t123>>64);
  r.n[0] = uint64_t(t1);
  const auto t126 = B(t2)+B(t4)+B(t19);
  r.n[1] = uint64_t(t126);
  const auto t127 = int64_t(t126>>64);
  const auto t128 = B(t5)+B(t7)+B(t20)+B(t22)+B(t37)+B(t127);
  r.n[2] = uint64_t(t128);
  const auto t129 = int64_t(t128>>64);
  const auto t130 = B(t8)+B(t10)+B(t23)+B(t25)+B(t38)+B(t40)+B(t55)+B(t129);
  r.n[3] = uint64_t(t130);
  const auto t131 = int64_t(t130>>64);
  const auto t132 = B(t11)+B(t13)+B(t26)+B(t28)+B(t41)+B(t43)+B(t56)+B(t58)+B(t73)+B(t131);
  r.n[4] = uint64_t(t132);
  const auto t133 = int64_t(t132>>64);
  const auto t134 = B(t14)+B(t16)+B(t29)+B(t31)+B(t44)+B(t46)+B(t59)+B(t61)+B(t74)+B(t76)+B(t91)+B(t133);
  r.n[5] = uint64_t(t134);
  const auto t135 = int64_t(t134>>64);
  const auto t136 = B(t17)+B(t32)+B(t34)+B(t47)+B(t49)+B(t62)+B(t64)+B(t77)+B(t79)+B(t92)+B(t94)+B(t109)+B(t135);
  r.n[6] = uint64_t(t136);
  const auto t137 = int64_t(t136>>64);
  const auto t138 = B(t35)+B(t50)+B(t52)+B(t65)+B(t67)+B(t80)+B(t82)+B(t95)+B(t97)+B(t110)+B(t112)+B(t137);
  r.n[7] = uint64_t(t138);
  const auto t139 = int64_t(t138>>64);
  const auto t140 = B(t53)+B(t68)+B(t70)+B(t83)+B(t85)+B(t98)+B(t100)+B(t113)+B(t115)+B(t139);
  r.n[8] = uint64_t(t140);
  const auto t141 = int64_t(t140>>64);
  const auto t142 = B(t71)+B(t86)+B(t88)+B(t101)+B(t103)+B(t116)+B(t118)+B(t141);
  r.n[9] = uint64_t(t142);
  const auto t143 = int64_t(t142>>64);
  const auto t144 = B(t89)+B(t104)+B(t106)+B(t119)+B(t121)+B(t143);
  r.n[10] = uint64_t(t144);
  const auto t145 = int64_t(t144>>64);
  const auto t146 = B(t107)+B(t122)+B(t124)+B(t145);
  r.n[11] = uint64_t(t146);
  const auto t147 = int64_t(t146>>64);
  const auto t148 = B(t125)+B(t147);
  r.n[12] = uint64_t(t148);
  return r;
}
GEODE_PURE static inline Exact<15> operator*(const Exact<8> x, const Exact<7> y) {
  Exact<15> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(y.n[1]);
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  const auto t6 = B(x.n[0])*B(y.n[2]);
  const auto t7 = uint64_t(t6);
  const auto t8 = uint64_t(t6>>64);
  const auto t9 = B(x.n[0])*B(y.n[3]);
  const auto t10 = uint64_t(t9);
  const auto t11 = uint64_t(t9>>64);
  const auto t12 = B(x.n[0])*B(y.n[4]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[0])*B(y.n[5]);
  const auto t16 = uint64_t(t15);
  const auto t17 = uint64_t(t15>>64);
  const auto t18 = B(x.n[0])*B(int64_t(y.n[6]));
  const auto t19 = uint64_t(t18);
  const auto t20 = int64_t(t18>>64);
  const auto t21 = B(x.n[1])*B(y.n[0]);
  const auto t22 = uint64_t(t21);
  const auto t23 = uint64_t(t21>>64);
  const auto t24 = B(x.n[1])*B(y.n[1]);
  const auto t25 = uint64_t(t24);
  const auto t26 = uint64_t(t24>>64);
  const auto t27 = B(x.n[1])*B(y.n[2]);
  const auto t28 = uint64_t(t27);
  const auto t29 = uint64_t(t27>>64);
  const auto t30 = B(x.n[1])*B(y.n[3]);
  const auto t31 = uint64_t(t30);
  const auto t32 = uint64_t(t30>>64);
  const auto t33 = B(x.n[1])*B(y.n[4]);
  const auto t34 = uint64_t(t33);
  const auto t35 = uint64_t(t33>>64);
  const auto t36 = B(x.n[1])*B(y.n[5]);
  const auto t37 = uint64_t(t36);
  const auto t38 = uint64_t(t36>>64);
  const auto t39 = B(x.n[1])*B(int64_t(y.n[6]));
  const auto t40 = uint64_t(t39);
  const auto t41 = int64_t(t39>>64);
  const auto t42 = B(x.n[2])*B(y.n[0]);
  const auto t43 = uint64_t(t42);
  const auto t44 = uint64_t(t42>>64);
  const auto t45 = B(x.n[2])*B(y.n[1]);
  const auto t46 = uint64_t(t45);
  const auto t47 = uint64_t(t45>>64);
  const auto t48 = B(x.n[2])*B(y.n[2]);
  const auto t49 = uint64_t(t48);
  const auto t50 = uint64_t(t48>>64);
  const auto t51 = B(x.n[2])*B(y.n[3]);
  const auto t52 = uint64_t(t51);
  const auto t53 = uint64_t(t51>>64);
  const auto t54 = B(x.n[2])*B(y.n[4]);
  const auto t55 = uint64_t(t54);
  const auto t56 = uint64_t(t54>>64);
  const auto t57 = B(x.n[2])*B(y.n[5]);
  const auto t58 = uint64_t(t57);
  const auto t59 = uint64_t(t57>>64);
  const auto t60 = B(x.n[2])*B(int64_t(y.n[6]));
  const auto t61 = uint64_t(t60);
  const auto t62 = int64_t(t60>>64);
  const auto t63 = B(x.n[3])*B(y.n[0]);
  const auto t64 = uint64_t(t63);
  const auto t65 = uint64_t(t63>>64);
  const auto t66 = B(x.n[3])*B(y.n[1]);
  const auto t67 = uint64_t(t66);
  const auto t68 = uint64_t(t66>>64);
  const auto t69 = B(x.n[3])*B(y.n[2]);
  const auto t70 = uint64_t(t69);
  const auto t71 = uint64_t(t69>>64);
  const auto t72 = B(x.n[3])*B(y.n[3]);
  const auto t73 = uint64_t(t72);
  const auto t74 = uint64_t(t72>>64);
  const auto t75 = B(x.n[3])*B(y.n[4]);
  const auto t76 = uint64_t(t75);
  const auto t77 = uint64_t(t75>>64);
  const auto t78 = B(x.n[3])*B(y.n[5]);
  const auto t79 = uint64_t(t78);
  const auto t80 = uint64_t(t78>>64);
  const auto t81 = B(x.n[3])*B(int64_t(y.n[6]));
  const auto t82 = uint64_t(t81);
  const auto t83 = int64_t(t81>>64);
  const auto t84 = B(x.n[4])*B(y.n[0]);
  const auto t85 = uint64_t(t84);
  const auto t86 = uint64_t(t84>>64);
  const auto t87 = B(x.n[4])*B(y.n[1]);
  const auto t88 = uint64_t(t87);
  const auto t89 = uint64_t(t87>>64);
  const auto t90 = B(x.n[4])*B(y.n[2]);
  const auto t91 = uint64_t(t90);
  const auto t92 = uint64_t(t90>>64);
  const auto t93 = B(x.n[4])*B(y.n[3]);
  const auto t94 = uint64_t(t93);
  const auto t95 = uint64_t(t93>>64);
  const auto t96 = B(x.n[4])*B(y.n[4]);
  const auto t97 = uint64_t(t96);
  const auto t98 = uint64_t(t96>>64);
  const auto t99 = B(x.n[4])*B(y.n[5]);
  const auto t100 = uint64_t(t99);
  const auto t101 = uint64_t(t99>>64);
  const auto t102 = B(x.n[4])*B(int64_t(y.n[6]));
  const auto t103 = uint64_t(t102);
  const auto t104 = int64_t(t102>>64);
  const auto t105 = B(x.n[5])*B(y.n[0]);
  const auto t106 = uint64_t(t105);
  const auto t107 = uint64_t(t105>>64);
  const auto t108 = B(x.n[5])*B(y.n[1]);
  const auto t109 = uint64_t(t108);
  const auto t110 = uint64_t(t108>>64);
  const auto t111 = B(x.n[5])*B(y.n[2]);
  const auto t112 = uint64_t(t111);
  const auto t113 = uint64_t(t111>>64);
  const auto t114 = B(x.n[5])*B(y.n[3]);
  const auto t115 = uint64_t(t114);
  const auto t116 = uint64_t(t114>>64);
  const auto t117 = B(x.n[5])*B(y.n[4]);
  const auto t118 = uint64_t(t117);
  const auto t119 = uint64_t(t117>>64);
  const auto t120 = B(x.n[5])*B(y.n[5]);
  const auto t121 = uint64_t(t120);
  const auto t122 = uint64_t(t120>>64);
  const auto t123 = B(x.n[5])*B(int64_t(y.n[6]));
  const auto t124 = uint64_t(t123);
  const auto t125 = int64_t(t123>>64);
  const auto t126 = B(x.n[6])*B(y.n[0]);
  const auto t127 = uint64_t(t126);
  const auto t128 = uint64_t(t126>>64);
  const auto t129 = B(x.n[6])*B(y.n[1]);
  const auto t130 = uint64_t(t129);
  const auto t131 = uint64_t(t129>>64);
  const auto t132 = B(x.n[6])*B(y.n[2]);
  const auto t133 = uint64_t(t132);
  const auto t134 = uint64_t(t132>>64);
  const auto t135 = B(x.n[6])*B(y.n[3]);
  const auto t136 = uint64_t(t135);
  const auto t137 = uint64_t(t135>>64);
  const auto t138 = B(x.n[6])*B(y.n[4]);
  const auto t139 = uint64_t(t138);
  const auto t140 = uint64_t(t138>>64);
  const auto t141 = B(x.n[6])*B(y.n[5]);
  const auto t142 = uint64_t(t141);
  const auto t143 = uint64_t(t141>>64);
  const auto t144 = B(x.n[6])*B(int64_t(y.n[6]));
  const auto t145 = uint64_t(t144);
  const auto t146 = int64_t(t144>>64);
  const auto t147 = B(int64_t(x.n[7]))*B(y.n[0]);
  const auto t148 = uint64_t(t147);
  const auto t149 = int64_t(t147>>64);
  const auto t150 = B(int64_t(x.n[7]))*B(y.n[1]);
  const auto t151 = uint64_t(t150);
  const auto t152 = int64_t(t150>>64);
  const auto t153 = B(int64_t(x.n[7]))*B(y.n[2]);
  const auto t154 = uint64_t(t153);
  const auto t155 = int64_t(t153>>64);
  const auto t156 = B(int64_t(x.n[7]))*B(y.n[3]);
  const auto t157 = uint64_t(t156);
  const auto t158 = int64_t(t156>>64);
  const auto t159 = B(int64_t(x.n[7]))*B(y.n[4]);
  const auto t160 = uint64_t(t159);
  const auto t161 = int64_t(t159>>64);
  const auto t162 = B(int64_t(x.n[7]))*B(y.n[5]);
  const auto t163 = uint64_t(t162);
  const auto t164 = int64_t(t162>>64);
  const auto t165 = B(int64_t(x.n[7]))*B(int64_t(y.n[6]));
  const auto t166 = uint64_t(t165);
  const auto t167 = uint64_t(t165>>64);
  r.n[0] = uint64_t(t1);
  const auto t168 = B(t2)+B(t4)+B(t22);
  r.n[1] = uint64_t(t168);
  const auto t169 = int64_t(t168>>64);
  const auto t170 = B(t5)+B(t7)+B(t23)+B(t25)+B(t43)+B(t169);
  r.n[2] = uint64_t(t170);
  const auto t171 = int64_t(t170>>64);
  const auto t172 = B(t8)+B(t10)+B(t26)+B(t28)+B(t44)+B(t46)+B(t64)+B(t171);
  r.n[3] = uint64_t(t172);
  const auto t173 = int64_t(t172>>64);
  const auto t174 = B(t11)+B(t13)+B(t29)+B(t31)+B(t47)+B(t49)+B(t65)+B(t67)+B(t85)+B(t173);
  r.n[4] = uint64_t(t174);
  const auto t175 = int64_t(t174>>64);
  const auto t176 = B(t14)+B(t16)+B(t32)+B(t34)+B(t50)+B(t52)+B(t68)+B(t70)+B(t86)+B(t88)+B(t106)+B(t175);
  r.n[5] = uint64_t(t176);
  const auto t177 = int64_t(t176>>64);
  const auto t178 = B(t17)+B(t19)+B(t35)+B(t37)+B(t53)+B(t55)+B(t71)+B(t73)+B(t89)+B(t91)+B(t107)+B(t109)+B(t127)+B(t177);
  r.n[6] = uint64_t(t178);
  const auto t179 = int64_t(t178>>64);
  const auto t180 = B(t20)+B(t38)+B(t40)+B(t56)+B(t58)+B(t74)+B(t76)+B(t92)+B(t94)+B(t110)+B(t112)+B(t128)+B(t130)+B(t148)+B(t179);
  r.n[7] = uint64_t(t180);
  const auto t181 = int64_t(t180>>64);
  const auto t182 = B(t41)+B(t59)+B(t61)+B(t77)+B(t79)+B(t95)+B(t97)+B(t113)+B(t115)+B(t131)+B(t133)+B(t149)+B(t151)+B(t181);
  r.n[8] = uint64_t(t182);
  const auto t183 = int64_t(t182>>64);
  const auto t184 = B(t62)+B(t80)+B(t82)+B(t98)+B(t100)+B(t116)+B(t118)+B(t134)+B(t136)+B(t152)+B(t154)+B(t183);
  r.n[9] = uint64_t(t184);
  const auto t185 = int64_t(t184>>64);
  const auto t186 = B(t83)+B(t101)+B(t103)+B(t119)+B(t121)+B(t137)+B(t139)+B(t155)+B(t157)+B(t185);
  r.n[10] = uint64_t(t186);
  const auto t187 = int64_t(t186>>64);
  const auto t188 = B(t104)+B(t122)+B(t124)+B(t140)+B(t142)+B(t158)+B(t160)+B(t187);
  r.n[11] = uint64_t(t188);
  const auto t189 = int64_t(t188>>64);
  const auto t190 = B(t125)+B(t143)+B(t145)+B(t161)+B(t163)+B(t189);
  r.n[12] = uint64_t(t190);
  const auto t191 = int64_t(t190>>64);
  const auto t192 = B(t146)+B(t164)+B(t166)+B(t191);
  r.n[13] = uint64_t(t192);
  const auto t193 = int64_t(t192>>64);
  const auto t194 = B(t167)+B(t193);
  r.n[14] = uint64_t(t194);
  return r;
}
GEODE_PURE static inline Exact<12> operator*(const Exact<9> x, const Exact<3> y) {
  Exact<12> r(uninit);
  typedef __uint128_t B;
  const auto t0 = B(x.n[0])*B(y.n[0]);
  const auto t1 = uint64_t(t0);
  const auto t2 = uint64_t(t0>>64);
  const auto t3 = B(x.n[0])*B(y.n[1]);
  const auto t4 = uint64_t(t3);
  const auto t5 = uint64_t(t3>>64);
  const auto t6 = B(x.n[0])*B(int64_t(y.n[2]));
  const auto t7 = uint64_t(t6);
  const auto t8 = int64_t(t6>>64);
  const auto t9 = B(x.n[1])*B(y.n[0]);
  const auto t10 = uint64_t(t9);
  const auto t11 = uint64_t(t9>>64);
  const auto t12 = B(x.n[1])*B(y.n[1]);
  const auto t13 = uint64_t(t12);
  const auto t14 = uint64_t(t12>>64);
  const auto t15 = B(x.n[1])*B(int64_t(y.n[2]));
  const auto t16 = uint64_t(t15);
  const auto t17 = int64_t(t15>>64);
  const auto t18 = B(x.n[2])*B(y.n[0]);
  const auto t19 = uint64_t(t18);
  const auto t20 = uint64_t(t18>>64);
  const auto t21 = B(x.n[2])*B(y.n[1]);
  const auto t22 = uint64_t(t21);
  const auto t23 = uint64_t(t21>>64);
  const auto t24 = B(x.n[2])*B(int64_t(y.n[2]));
  const auto t25 = uint64_t(t24);
  const auto t26 = int64_t(t24>>64);
  const auto t27 = B(x.n[3])*B(y.n[0]);
  const auto t28 = uint64_t(t27);
  const auto t29 = uint64_t(t27>>64);
  const auto t30 = B(x.n[3])*B(y.n[1]);
  const auto t31 = uint64_t(t30);
  const auto t32 = uint64_t(t30>>64);
  const auto t33 = B(x.n[3])*B(int64_t(y.n[2]));
  const auto t34 = uint64_t(t33);
  const auto t35 = int64_t(t33>>64);
  const auto t36 = B(x.n[4])*B(y.n[0]);
  const auto t37 = uint64_t(t36);
  const auto t38 = uint64_t(t36>>64);
  const auto t39 = B(x.n[4])*B(y.n[1]);
  const auto t40 = uint64_t(t39);
  const auto t41 = uint64_t(t39>>64);
  const auto t42 = B(x.n[4])*B(int64_t(y.n[2]));
  const auto t43 = uint64_t(t42);
  const auto t44 = int64_t(t42>>64);
  const auto t45 = B(x.n[5])*B(y.n[0]);
  const auto t46 = uint64_t(t45);
  const auto t47 = uint64_t(t45>>64);
  const auto t48 = B(x.n[5])*B(y.n[1]);
  const auto t49 = uint64_t(t48);
  const auto t50 = uint64_t(t48>>64);
  const auto t51 = B(x.n[5])*B(int64_t(y.n[2]));
  const auto t52 = uint64_t(t51);
  const auto t53 = int64_t(t51>>64);
  const auto t54 = B(x.n[6])*B(y.n[0]);
  const auto t55 = uint64_t(t54);
  const auto t56 = uint64_t(t54>>64);
  const auto t57 = B(x.n[6])*B(y.n[1]);
  const auto t58 = uint64_t(t57);
  const auto t59 = uint64_t(t57>>64);
  const auto t60 = B(x.n[6])*B(int64_t(y.n[2]));
  const auto t61 = uint64_t(t60);
  const auto t62 = int64_t(t60>>64);
  const auto t63 = B(x.n[7])*B(y.n[0]);
  const auto t64 = uint64_t(t63);
  const auto t65 = uint64_t(t63>>64);
  const auto t66 = B(x.n[7])*B(y.n[1]);
  const auto t67 = uint64_t(t66);
  const auto t68 = uint64_t(t66>>64);
  const auto t69 = B(x.n[7])*B(int64_t(y.n[2]));
  const auto t70 = uint64_t(t69);
  const auto t71 = int64_t(t69>>64);
  const auto t72 = B(int64_t(x.n[8]))*B(y.n[0]);
  const auto t73 = uint64_t(t72);
  const auto t74 = int64_t(t72>>64);
  const auto t75 = B(int64_t(x.n[8]))*B(y.n[1]);
  const auto t76 = uint64_t(t75);
  const auto t77 = int64_t(t75>>64);
  const auto t78 = B(int64_t(x.n[8]))*B(int64_t(y.n[2]));
  const auto t79 = uint64_t(t78);
  const auto t80 = uint64_t(t78>>64);
  r.n[0] = uint64_t(t1);
  const auto t81 = B(t2)+B(t4)+B(t10);
  r.n[1] = uint64_t(t81);
  const auto t82 = int64_t(t81>>64);
  const auto t83 = B(t5)+B(t7)+B(t11)+B(t13)+B(t19)+B(t82);
  r.n[2] = uint64_t(t83);
  const auto t84 = int64_t(t83>>64);
  const auto t85 = B(t8)+B(t14)+B(t16)+B(t20)+B(t22)+B(t28)+B(t84);
  r.n[3] = uint64_t(t85);
  const auto t86 = int64_t(t85>>64);
  const auto t87 = B(t17)+B(t23)+B(t25)+B(t29)+B(t31)+B(t37)+B(t86);
  r.n[4] = uint64_t(t87);
  const auto t88 = int64_t(t87>>64);
  const auto t89 = B(t26)+B(t32)+B(t34)+B(t38)+B(t40)+B(t46)+B(t88);
  r.n[5] = uint64_t(t89);
  const auto t90 = int64_t(t89>>64);
  const auto t91 = B(t35)+B(t41)+B(t43)+B(t47)+B(t49)+B(t55)+B(t90);
  r.n[6] = uint64_t(t91);
  const auto t92 = int64_t(t91>>64);
  const auto t93 = B(t44)+B(t50)+B(t52)+B(t56)+B(t58)+B(t64)+B(t92);
  r.n[7] = uint64_t(t93);
  const auto t94 = int64_t(t93>>64);
  const auto t95 = B(t53)+B(t59)+B(t61)+B(t65)+B(t67)+B(t73)+B(t94);
  r.n[8] = uint64_t(t95);
  const auto t96 = int64_t(t95>>64);
  const auto t97 = B(t62)+B(t68)+B(t70)+B(t74)+B(t76)+B(t96);
  r.n[9] = uint64_t(t97);
  const auto t98 = int64_t(t97>>64);
  const auto t99 = B(t71)+B(t77)+B(t79)+B(t98);
  r.n[10] = uint64_t(t99);
  const auto t100 = int64_t(t99>>64);
  const auto t101 = B(t80)+B(t100);
  r.n[11] = uint64_t(t101);
  return r;
}
GEODE_PURE static inline Exact<1> operator<<(const Exact<1> x, const int s) {
  assert(unsigned(s)<3);
  Exact<1> r(uninit);
  const auto t0 = __uint128_t(x.n[0])<<s;
  r.n[0] = uint64_t(t0);
  return r;
}
GEODE_PURE static inline Exact<2> operator<<(const Exact<2> x, const int s) {
  assert(unsigned(s)<3);
  Exact<2> r(uninit);
  const auto t0 = __uint128_t(x.n[0])<<s;
  const auto t1 = __uint128_t(x.n[1])<<s;
  r.n[0] = uint64_t(t0);
  r.n[1] = uint64_t(t1) | uint64_t(t0>>64);
  return r;
}
GEODE_PURE static inline Exact<3> operator<<(const Exact<3> x, const int s) {
  assert(unsigned(s)<3);
  Exact<3> r(uninit);
  const auto t0 = __uint128_t(x.n[0])<<s;
  const auto t1 = __uint128_t(x.n[1])<<s;
  const auto t2 = __uint128_t(x.n[2])<<s;
  r.n[0] = uint64_t(t0);
  r.n[1] = uint64_t(t1) | uint64_t(t0>>64);
  r.n[2] = uint64_t(t2) | uint64_t(t1>>64);
  return r;
}
GEODE_PURE static inline Exact<4> operator<<(const Exact<4> x, const int s) {
  assert(unsigned(s)<3);
  Exact<4> r(uninit);
  const auto t0 = __uint128_t(x.n[0])<<s;
  const auto t1 = __uint128_t(x.n[1])<<s;
  const auto t2 = __uint128_t(x.n[2])<<s;
  const auto t3 = __uint128_t(x.n[3])<<s;
  r.n[0] = uint64_t(t0);
  r.n[1] = uint64_t(t1) | uint64_t(t0>>64);
  r.n[2] = uint64_t(t2) | uint64_t(t1>>64);
  r.n[3] = uint64_t(t3) | uint64_t(t2>>64);
  return r;
}
